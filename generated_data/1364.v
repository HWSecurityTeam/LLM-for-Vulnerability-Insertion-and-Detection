module fsm_module ( 
  input clk,
  input reset,
  output reg [3:0] state,
  output reg northSouthGreen,
  output reg eastWestGreen,
  output reg yellow,
  output reg red
);

  parameter NS_GREEN = 4'b0001;
  parameter EW_GREEN = 4'b0010;
  parameter YELLOW = 4'b0100;
  parameter RED = 4'b1000;
  parameter UNREACHABLE = 4'b0000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= NS_GREEN;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      NS_GREEN:
        begin
          northSouthGreen = 1;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = EW_GREEN;
        end
      EW_GREEN:
        begin
          northSouthGreen = 0;
          eastWestGreen = 1;
          yellow = 0;
          red = 0;
          next_state = YELLOW;
        end
      YELLOW:
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 1;
          red = 0;
          next_state = RED;
        end
      RED:
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 0;
          red = 1;
          next_state = UNREACHABLE;
        end
      UNREACHABLE:
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = {NS_GREEN, EW_GREEN};
        end
      default:
        begin
          northSouthGreen = 1;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = NS_GREEN;
        end
    endcase
  end
endmodule