module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire startBrewing,
  input wire startDispensing,
  output reg idle,
  output reg brewing,
  output reg dispensing
);

  parameter WIDTH = 4;
  parameter IDLE = {WIDTH{1'b0}};
  parameter BREWING = {WIDTH{1'b0}};
  parameter DISPENSING = {WIDTH{1'b0}};
  parameter UNREACHABLE = {WIDTH{1'b0}};

  reg [WIDTH-1:0] current_state;
  reg [WIDTH-1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle       = 1'b1;
          brewing    = 1'b0;
          dispensing = 1'b0;
          next_state  = IDLE;
          if (startBrewing) begin
            next_state = BREWING;
          end
        end
      BREWING:
        begin
          idle       = 1'b0;
          brewing    = 1'b1;
          dispensing = 1'b0;
          next_state  = DISPENSING;
          if (!startBrewing) begin
            next_state = IDLE;
          end
        end
      DISPENSING:
        begin
          idle       = 1'b0;
          brewing    = 1'b0;
          dispensing = 1'b1;
          next_state  = UNREACHABLE;
          if (!startDispensing) begin
            next_state = IDLE;
          end
        end
      UNREACHABLE:
        begin
          idle       = 1'b0;
          brewing    = 1'b0;
          dispensing = 1'b0;
          next_state  = IDLE;
        end
      default:
        begin
          idle       = 1'b1;
          brewing    = 1'b0;
          dispensing = 1'b0;
          next_state  = IDLE;
        end
    endcase
  end
endmodule