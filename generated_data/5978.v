module fsm_module (
    input clk,
    input reset,
    output reg [4:0] current_state,
    output reg [4:0] next_state
);

parameter STATE_0 = 5'b00000;
parameter STATE_1 = 5'b00001;
parameter STATE_2 = 5'b00010;
parameter STATE_3 = 5'b00011;
parameter STATE_4 = 5'b00100;

reg [3:0] counter;

always @(posedge clk, posedge reset) begin
    if (reset) begin
        current_state <= STATE_0;
        counter <= 0;
    end else begin
        case (current_state)
            STATE_0: begin
                next_state <= STATE_1;
                counter <= counter + 1;
            end
            STATE_1: begin
                next_state <= STATE_2;
                counter <= counter + 1;
            end
            STATE_2: begin
                next_state <= STATE_3;
                counter <= counter + 1;
            end
            STATE_3: begin
                next_state <= STATE_4;
                counter <= counter + 1;
            end
            STATE_4: begin
                next_state <= STATE_0;
                counter <= counter + 1;
            end
        endcase
    end
end

assign current_state = next_state;

endmodule