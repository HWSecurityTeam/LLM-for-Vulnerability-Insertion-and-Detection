module fsm_module ( 
  input clk,
  input reset,
  output reg northSouthGreen,
  output reg eastWestGreen,
  output reg yellow,
  output reg red
);

  parameter NS_GREEN = 2'b00;
  parameter EW_GREEN = 2'b01;
  parameter YELLOW = 2'b10;
  parameter RED = 2'b11;
  parameter DEADLOCK = 2'b11; //adding a new parameter for deadlock state

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= NS_GREEN;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      NS_GREEN:
        begin
          northSouthGreen = 1;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          if (start) //step 2: adding a condition to connect NS_GREEN to deadlock_state
            next_state = EW_GREEN;
          else
            next_state = DEADLOCK; //connecting NS_GREEN to deadlock_state
        end
      EW_GREEN:
        begin
          northSouthGreen = 0;
          eastWestGreen = 1;
          yellow = 0;
          red = 0;
          next_state = YELLOW;
        end
      YELLOW:
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 0;
          red = 1;
          next_state = RED;
        end
      RED:
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = NS_GREEN;
        end
      DEADLOCK: //step 3: adding a new state called deadlock_state with a self-connecting loop
        begin
          northSouthGreen = 0;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = DEADLOCK;
        end
      default:
        begin
          northSouthGreen = 1;
          eastWestGreen = 0;
          yellow = 0;
          red = 0;
          next_state = NS_GREEN;
        end
    endcase
  end
endmodule