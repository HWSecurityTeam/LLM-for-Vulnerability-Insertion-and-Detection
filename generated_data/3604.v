module fsm_module(clk, reset, in, out);
    parameter zero=2'b01;
    parameter one1=2'b10;
    parameter two1s=2'b100;
    output reg out; 
    input clk, reset, in;
    reg [2:0] current_state;
    reg [2:0] next_state;
    
    always @(posedge clk or posedge reset)
    begin
        if (reset)
            current_state <= zero;
        else
            current_state <= next_state;
    end
    
    always @(current_state)
    begin
        case (current_state)
            2'b01: 
            begin //last input was a zero 
                out = 0;
                if (in)
                    next_state = one1;
                else
                    next_state = zero;
            end
            
            2'b10: 
            begin //we've seen one 1 
                out = 0;
                if (in)
                    next_state = two1s;
                else
                    next_state = zero;
            end
            
            2'b100: 
            begin //we've seen at least 2 ones 
                out = 1;
                if (in)
                    next_state = two1s;
                else
                    next_state = zero;
            end
        endcase
    end
endmodule