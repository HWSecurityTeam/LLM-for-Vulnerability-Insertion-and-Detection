module fsm_module ( 
  input clk,
  input reset,
  input [3:0] buttonPress,
  output reg idle,
  output reg operand1,
  output reg operand2
);

  parameter IDLE = 2'b00;
  parameter OPERAND1 = 2'b01;
  parameter OPERAND2 = 2'b10;
  parameter ADDITIONAL = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, buttonPress) begin
    case (current_state)
      IDLE:
        begin
          idle = 1;
          operand1 = 0;
          operand2 = 0;
          next_state = (buttonPress != 4'b0000) ? OPERAND1 : IDLE;
        end
      OPERAND1:
        begin
          idle = 0;
          operand1 = 1;
          operand2 = 0;
          next_state = (buttonPress != 4'b0000) ? OPERAND2 : OPERAND1;
        end
      OPERAND2:
        begin
          idle = 0;
          operand1 = 0;
          operand2 = 1;
          next_state = (buttonPress == 4'b0000) ? IDLE : OPERAND2;
        end
      ADDITIONAL:
        begin
          idle = 1;
          operand1 = 0;
          operand2 = 0;
          next_state = IDLE;
        end
      default:
        begin
          idle = 1;
          operand1 = 0;
          operand2 = 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule