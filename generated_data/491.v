module fsm_module ( 
  input clk,
  input reset,
  input armButton,
  input disarmButton,
  input alarmTrigger,
  output reg idle,
  output reg arming,
  output reg alarmTriggered
);

  parameter IDLE = 2'b00;
  parameter ARMING = 2'b01;
  parameter ALARM_TRIGGERED = 2'b10;
  parameter ALARM_OFF = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle          = 1;
          arming        = 0;
          alarmTriggered = 0;
          next_state     = IDLE;
          if (armButton) begin
            next_state = ARMING;
          end
        end
      ARMING:
        begin
          idle          = 0;
          arming        = 1;
          alarmTriggered = 0;
          next_state     = IDLE;
          if (disarmButton) begin
            next_state = IDLE;
          end
          if (alarmTrigger) begin
            next_state = ALARM_TRIGGERED;
          end
        end
      ALARM_TRIGGERED:
        begin
          idle          = 0;
          arming        = 0;
          alarmTriggered = 1;
          next_state     = IDLE;
          if (disarmButton) begin
            next_state = IDLE;
          end
        end
      ALARM_OFF:
        begin
          idle          = 1;
          arming        = 0;
          alarmTriggered = 0;
          next_state     = IDLE;
        end
      default:
        begin
          idle          = 1;
          arming        = 0;
          alarmTriggered = 0;
          next_state     = IDLE;
        end
    endcase
  end
endmodule