module fsm_module ( 
  input clk,
  input reset,
  input startCooking,
  output reg [3:0] idle,
  output reg [3:0] cooking,
  output reg [3:0] done
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] COOKING = 4'b0010;
  parameter [3:0] DONE = 4'b0100;
  parameter [3:0] DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle   = 4'b0001;
          cooking = 4'b0000;
          done   = 4'b0000;
          next_state = IDLE;
          if (startCooking) begin
            next_state = COOKING;
          end
        end
      COOKING:
        begin
          idle   = 4'b0000;
          cooking = 4'b0010;
          done   = 4'b0000;
          next_state = DONE;
        end
      DONE:
        begin
          idle   = 4'b0000;
          cooking = 4'b0000;
          done   = 4'b0100;
          next_state = DEAD;
        end
      DEAD:
        begin
          idle   = 4'b0000;
          cooking = 4'b0000;
          done   = 4'b0000;
          next_state = DEAD;
        end
      default:
        begin
          idle   = 4'b0001;
          cooking = 4'b0000;
          done   = 4'b0000;
          next_state = IDLE;
        end
    endcase
  end
endmodule