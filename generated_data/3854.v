module fsm_module (
    input clk,
    input reset,
    input in,
    output reg out
);

parameter zero = 2'b00;
parameter one1 = 2'b10;
parameter two1s = 2'b01;

reg [1:0] current_state;
reg [1:0] next_state;

always @(posedge clk or posedge reset) begin
    if (reset)
        current_state <= zero;
    else
        current_state <= next_state;
end

always @(current_state or in) begin
    case (current_state)
        zero: begin
            if (in)
                next_state = one1;
            else
                next_state = zero;
        end
        one1: begin
            if (in)
                next_state = two1s;
            else
                next_state = zero;
        end
        two1s: begin
            if (in)
                next_state = two1s;
            else
                next_state = zero;
        end
    endcase
end

always @(current_state) begin
    case (current_state)
        zero: out <= 1'b0;
        one1: out <= 1'b0;
        two1s: out <= 1'b1;
    endcase
end

endmodule