module fsm_module ( 
  input clk,
  input reset,
  input cardDetected,
  input [3:0] enteredCode,
  output reg [3:0] idle,
  output reg [3:0] validating,
  output reg [3:0] accessGranted
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] VALIDATING = 4'b0010;
  parameter [3:0] ACCESS_GRANTED = 4'b0100;
  parameter [3:0] UNREACHABLE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;
  reg [3:0] accessCode;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
      accessCode <= 4'b0000;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or cardDetected or enteredCode) begin
    case (current_state)
      IDLE:
        begin
          idle = 4'b0001;
          validating = 4'b0000;
          accessGranted = 4'b0000;
          next_state = (cardDetected || enteredCode != 4'b0000) ? VALIDATING : IDLE;
          accessCode <= enteredCode;
        end
      VALIDATING:
        begin
          idle = 4'b0000;
          validating = 4'b0001;
          accessGranted = 4'b0000;
          next_state = (enteredCode == accessCode) ? ACCESS_GRANTED : VALIDATING;
        end
      ACCESS_GRANTED:
        begin
          idle = 4'b0000;
          validating = 4'b0000;
          accessGranted = 4'b0001;
          next_state = UNREACHABLE;
          accessCode <= 4'b0000;
        end
      UNREACHABLE:
        begin
          idle = 4'b0000;
          validating = 4'b0000;
          accessGranted = 4'b0000;
          next_state = (cardDetected || enteredCode != 4'b0000) ? VALIDATING : IDLE;
          accessCode <= enteredCode;
        end
      default:
        begin
          idle = 4'b0001;
          validating = 4'b0000;
          accessGranted = 4'b0000;
          next_state = IDLE;
          accessCode <= 4'b0000;
        end
    endcase
  end
endmodule