module fsm_module ( 
  input clk,
  input reset,
  input start,
  output reg greenLight,
  output reg redLight
);

  parameter X=3'b000, Y=3'b001, Z=3'b011; 
  parameter DEADLOCK = 3'b111; //adding a new deadlock state

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= X
    end else begin
      current_state <= next_state
    end
  end

  always @(current_state) begin
    case(current_state) 
        X: begin
         if (start) begin
           next_state = Y
         end else begin
           next_state = DEADLOCK
         end
        end
 
        Y: begin
          next_state = Z
        end
 
        Z: begin
          next_state = X
        end 
          
        DEADLOCK: begin
          next_state = DEADLOCK
        end
     endcase
     
     case(current_state)
       X: begin
         greenLight = 1
         redLight   = 0
       end
       Y: begin
         greenLight = 0
         redLight   = 1
       end
       Z: begin
         greenLight = 0
         redLight   = 1
       end
       DEADLOCK: begin
         greenLight = 0
         redLight   = 0
       end
     endcase
  end
endmodule