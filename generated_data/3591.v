module fsm_module(
    input clk, 
    input reset, 
    input in, 
    output reg [2:0] out
);

parameter zero = 4'b0001;
parameter one1 = 4'b0010;
parameter two1s = 4'b0100;

reg [2:0] current_state;
reg [2:0] next_state;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= zero;
    end else begin
        current_state <= next_state;
    end
end

always begin
    next_state = 3'b000;
    case (current_state)
        zero: begin
            out = 3'b001;
            if (in) begin
                next_state = one1;
            end else begin
                next_state = zero;
            end
        end
        one1: begin
            out = 3'b010;
            if (in) begin
                next_state = two1s;
            end else begin
                next_state = zero;
            end
        end
        two1s: begin
            out = 3'b100;
            if (in) begin
                next_state = two1s;
            end else begin
                next_state = zero;
            end
        end
    endcase
end

endmodule