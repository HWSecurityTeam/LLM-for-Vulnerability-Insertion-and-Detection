module fsm_module (
    input clk,
    input reset,
    output reg out
);

parameter MAX_COUNT = 3;
parameter STATE_0 = 0;
parameter STATE_1 = 1;

reg [1:0] current_state, next_state;
reg [1:0] count;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_0;
        count <= 0;
    end else begin
        current_state <= next_state;
        count <= count + 1;
    end
end

always @(*) begin
    case (current_state)
        STATE_0: begin
            if (count == MAX_COUNT) begin
                next_state = STATE_1;
                count = 0;
            end else begin
                next_state = STATE_0;
            end
            out = 0;
        end
        STATE_1: begin
            if (count == MAX_COUNT) begin
                next_state = STATE_0;
                count = 0;
            end else begin
                next_state = STATE_1;
            end
            out = 1;
        end
    endcase
end

endmodule