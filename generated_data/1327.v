module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire buttonPress,
  output reg [3:0] state
);

parameter IDLE = 4'b0001;
parameter OPERAND1 = 4'b0010;
parameter OPERAND2 = 4'b0100;
parameter DEADLOCK_STATE = 4'b1000;

reg [3:0] current_state;
reg [3:0] next_state;

always @(posedge clk or posedge reset) begin
  if (reset) begin
    current_state <= IDLE;
  end else begin
    current_state <= next_state;
  end
end

always @(current_state or buttonPress) begin
  case (current_state)
    IDLE:
      begin
        state = IDLE;
        if (buttonPress != 4'b0000) begin
          next_state = OPERAND1;
        end else begin
          next_state = DEADLOCK_STATE;
        end
      end
    OPERAND1:
      begin
        state = OPERAND1;
        if (buttonPress != 4'b0000) begin
          next_state = OPERAND2;
        end else begin
          next_state = OPERAND1;
        end
      end
    OPERAND2:
      begin
        state = OPERAND2;
        if (buttonPress == 4'b0000) begin
          next_state = IDLE;
        end else begin
          next_state = OPERAND2;
        end
      end
    DEADLOCK_STATE:
      begin
        state = DEADLOCK_STATE;
        next_state = DEADLOCK_STATE;
      end
  endcase
end

endmodule