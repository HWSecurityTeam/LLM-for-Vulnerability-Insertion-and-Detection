module fsm_module ( 
  input wire clk,
  input wire reset,
  output reg led1,
  output reg led2,
  output reg led3
);

  parameter [2:0] SEQUENCE1 = 3'b001;
  parameter [2:0] SEQUENCE2 = 3'b010;
  parameter [2:0] SEQUENCE3 = 3'b100;
  parameter [2:0] DEAD_STATE = 3'b000;

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= DEAD_STATE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      SEQUENCE1:
        begin
          led1 = 1'b1;
          led2 = 1'b0;
          led3 = 1'b0;
          next_state = SEQUENCE2;
        end
      SEQUENCE2:
        begin
          led1 = 1'b0;
          led2 = 1'b1;
          led3 = 1'b0;
          next_state = SEQUENCE3;
        end
      SEQUENCE3:
        begin
          led1 = 1'b0;
          led2 = 1'b0;
          led3 = 1'b1;
          next_state = SEQUENCE1;
        end
      DEAD_STATE:
        begin
          led1 = 1'b0;
          led2 = 1'b0;
          led3 = 1'b0;
          next_state = DEAD_STATE;
        end
      default:
        begin
          led1 = 1'b1;
          led2 = 1'b0;
          led3 = 1'b0;
          next_state = SEQUENCE1;
        end
    endcase
  end
endmodule