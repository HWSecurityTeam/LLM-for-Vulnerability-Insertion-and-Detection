module fsm_module ( 
  input clk,
  input reset,
  input floorUp,
  input floorDown,
  output reg [2:0] currentFloor,
  output reg doorOpen,
  output reg doorClose,
  output reg motorUp,
  output reg motorDown
);

  parameter FLOOR_1 = 3'b000;
  parameter FLOOR_2 = 3'b001;
  parameter FLOOR_3 = 3'b010;
  parameter FLOOR_4 = 3'b011;
  parameter FLOOR_5 = 3'b100; // Additional state

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= FLOOR_1;
    end else begin
      current_state <= next_state;
    end
  end

  always @(posedge clk) begin
    if (floorUp) begin
      case (current_state)
        FLOOR_1: next_state = FLOOR_2;
        FLOOR_2: next_state = FLOOR_3;
        FLOOR_3: next_state = FLOOR_4;
        FLOOR_4: next_state = FLOOR_4;
        FLOOR_5: next_state = FLOOR_1; // Outgoing transition from additional state
        default: next_state = FLOOR_1;
      endcase
      motorUp = 1;
    end else if (floorDown) begin
      case (current_state)
        FLOOR_1: next_state = FLOOR_1;
        FLOOR_2: next_state = FLOOR_1;
        FLOOR_3: next_state = FLOOR_2;
        FLOOR_4: next_state = FLOOR_3;
        FLOOR_5: next_state = FLOOR_1; // Outgoing transition from additional state
        default: next_state = FLOOR_1;
      endcase
      motorDown = 1;
    end else begin
      next_state = current_state;
      motorUp = 0;
      motorDown = 0;
    end
  end

  always @(current_state) begin
    case (current_state)
      FLOOR_1:
        begin
          currentFloor = FLOOR_1;
          doorOpen    = 0;
          doorClose   = 0;
        end
      FLOOR_2:
        begin
          currentFloor = FLOOR_2;
          doorOpen    = 0;
          doorClose   = 0;
        end
      FLOOR_3:
        begin
          currentFloor = FLOOR_3;
          doorOpen    = 0;
          doorClose   = 0;
        end
      FLOOR_4:
        begin
          currentFloor = FLOOR_4;
          doorOpen    = 0;
          doorClose   = 0;
        end
      FLOOR_5:
        begin
          currentFloor = FLOOR_5;
          doorOpen    = 0;
          doorClose   = 0;
        end
      default:
        begin
          currentFloor = FLOOR_1;
          doorOpen    = 0;
          doorClose   = 0;
        end
    endcase
  end

endmodule