module fsm_module (
    input clk,
    input reset,
    input [7:0] data_in,
    output reg [7:0] data_out,
    output reg [1:0] current_state,
    output reg [1:0] next_state
);

parameter STATE_A = 2'b00;
parameter STATE_B = 2'b01;
parameter M = 2'b10;

reg [7:0] alu_out;
reg [1:0] state;

always @ (posedge clk) begin
    if (reset) begin
        state <= STATE_A;
        data_out <= 0;
    end else begin
        case (state)
            STATE_A: begin
                alu_out <= data_in + 1;
                if (alu_out < data_in) begin
                    next_state <= STATE_B;
                end else begin
                    next_state <= STATE_A;
                end
            end
            STATE_B: begin
                alu_out <= data_in - 1;
                if (alu_out > data_in) begin
                    next_state <= STATE_A;
                end else begin
                    next_state <= M;
                end
            end
            M: begin
                next_state <= STATE_A;
            end
        endcase
        state <= next_state;
        data_out <= alu_out;
    end
end

endmodule