module fsm_module ( 
  input clk,
  input reset,
  input [1:0] ticketRequest,
  input ticketValidated,
  output reg idle,
  output reg selling,
  output reg validating
);

  parameter IDLE = 2'b00;
  parameter SELLING = 2'b01;
  parameter VALIDATING = 2'b10;
  parameter DEADLOCK = 2'b11; //added new parameter for deadlock state

  reg [1:0] current_state;
  reg [1:0] next_state;
  reg [1:0] ticketType;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
      ticketType <= 0;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or ticketRequest or ticketValidated) begin
    case (current_state)
      IDLE:
        begin
          idle = 1;
          selling = 0;
          validating = 0;
          if (ticketRequest == 1) begin
            next_state = SELLING;
          end else begin
            next_state = DEADLOCK; //modified state transition for IDLE to connect to deadlock_state
          end
          ticketType <= ticketRequest;
        end
      SELLING:
        begin
          idle = 0;
          selling = 1;
          validating = 0;
          if (ticketValidated) begin
            next_state = VALIDATING;
          end else begin
            next_state = SELLING;
          end
        end
      VALIDATING:
        begin
          idle = 0;
          selling = 0;
          validating = 1;
          next_state = IDLE;
          ticketType <= 0;
        end
      DEADLOCK: //added new state with self-connecting loop
        begin
          idle = 0;
          selling = 0;
          validating = 0;
          next_state = DEADLOCK;
        end
      default:
        begin
          idle = 1;
          selling = 0;
          validating = 0;
          next_state = IDLE;
          ticketType <= 0;
        end
    endcase
  end
endmodule