module fsm_module ( 
  input clk,
  input reset,
  input temperature,
  output reg [3:0] state
);

  parameter IDLE = 4'b0001;
  parameter HEATING = 4'b0010;
  parameter COOLING = 4'b0100;
  parameter DEADLOCK = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(temperature, current_state) begin
    case (current_state)
      IDLE:
        begin
          state = IDLE;
          next_state = IDLE;
          if (temperature < 70) begin
            next_state = HEATING;
          end
          if (temperature > 80) begin
            next_state = COOLING;
          end
          if (reset) begin
            next_state = DEADLOCK;
          end
        end
      HEATING:
        begin
          state = HEATING;
          next_state = IDLE;
          if (temperature >= 70) begin
            next_state = IDLE;
          end
        end
      COOLING:
        begin
          state = COOLING;
          next_state = IDLE;
          if (temperature <= 80) begin
            next_state = IDLE;
          end
        end
      DEADLOCK:
        begin
          state = DEADLOCK;
          next_state = DEADLOCK;
        end
      default:
        begin
          state = IDLE;
          next_state = IDLE;
        end
    endcase
  end
endmodule