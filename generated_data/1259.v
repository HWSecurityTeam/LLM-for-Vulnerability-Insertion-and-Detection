module fsm_module ( 
  input clk,
  input reset,
  input startTask,
  output reg [3:0] idle,
  output reg [3:0] running,
  output reg [3:0] complete
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] RUNNING = 4'b0010;
  parameter [3:0] COMPLETE = 4'b0100;
  parameter [3:0] DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle     = 4'b0001;
          running  = 4'b0000;
          complete = 4'b0000;
          next_state = (startTask) ? RUNNING : IDLE;
        end
      RUNNING:
        begin
          idle     = 4'b0000;
          running  = 4'b0010;
          complete = 4'b0000;
          next_state = (clk) ? COMPLETE : RUNNING;
        end
      COMPLETE:
        begin
          idle     = 4'b0000;
          running  = 4'b0000;
          complete = 4'b0100;
          next_state = DEAD;
        end
      DEAD:
        begin
          idle     = 4'b0000;
          running  = 4'b0000;
          complete = 4'b0000;
          next_state = DEAD;
        end
      default:
        begin
          idle     = 4'b0001;
          running  = 4'b0000;
          complete = 4'b0000;
          next_state = IDLE;
        end
    endcase
  end
endmodule