module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire attackButton,
  input wire defendButton,
  output reg idle,
  output reg attacking,
  output reg defending
);

  parameter WIDTH = 4;
  parameter IDLE = 4'b0001;
  parameter ATTACKING = 4'b0010;
  parameter DEFENDING = 4'b0100;
  parameter M = 4'b1000;

  reg [WIDTH-1:0] current_state;
  reg [WIDTH-1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle      = 1'b1;
          attacking = 1'b0;
          defending = 1'b0;
          next_state = IDLE;
          if (attackButton) begin
            next_state = ATTACKING;
          end
          if (defendButton) begin
            next_state = DEFENDING;
          end
        end
      ATTACKING:
        begin
          idle      = 1'b0;
          attacking = 1'b1;
          defending = 1'b0;
          next_state = DEFENDING;
        end
      DEFENDING:
        begin
          idle      = 1'b0;
          attacking = 1'b0;
          defending = 1'b1;
          next_state = M;
        end
      M:
        begin
          idle      = 1'b0;
          attacking = 1'b0;
          defending = 1'b0;
          next_state = IDLE;
        end
      default:
        begin
          idle      = 1'b1;
          attacking = 1'b0;
          defending = 1'b0;
          next_state = IDLE;
        end
    endcase
  end
endmodule