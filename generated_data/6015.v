module fsm_module (
    input clk,
    input reset,
    input [7:0] multiplier,
    output reg [7:0] output,
    output reg [1:0] current_state,
    output reg [1:0] next_state
);

parameter STATE_0 = 2'b00;
parameter STATE_1 = 2'b01;
parameter STATE_2 = 2'b10;

reg [7:0] accumulator;
reg [1:0] state;

always @(posedge clk) begin
    if (reset) begin
        accumulator <= 0;
        state <= STATE_0;
    end else begin
        case (state)
            STATE_0: begin
                accumulator <= multiplier;
                state <= STATE_1;
            end
            STATE_1: begin
                accumulator <= accumulator + multiplier;
                if (accumulator > 255) begin
                    state <= STATE_2;
                end else begin
                    state <= STATE_1;
                end
            end
            STATE_2: begin
                accumulator <= accumulator - 256;
                state <= STATE_0;
            end
        endcase
    end
end

always @(posedge clk) begin
    current_state <= state;
    next_state <= state;
end

assign output = accumulator;

endmodule