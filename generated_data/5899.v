module fsm_module ( 
    input clk,
    input reset,
    output reg [2:0] current_state,
    output reg [2:0] next_state
);

parameter STATE_0 = 3'b000;
parameter STATE_1 = 3'b001;
parameter STATE_2 = 3'b010;
parameter STATE_3 = 3'b011;
parameter STATE_4 = 3'b100;
parameter STATE_5 = 3'b101;
parameter STATE_6 = 3'b110;
parameter STATE_7 = 3'b111;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_0;
        next_state <= STATE_0;
    end else begin
        case (current_state)
            STATE_0: begin
                next_state <= STATE_1;
            end
            STATE_1: begin
                next_state <= STATE_2;
            end
            STATE_2: begin
                next_state <= STATE_3;
            end
            STATE_3: begin
                next_state <= STATE_4;
            end
            STATE_4: begin
                next_state <= STATE_5;
            end
            STATE_5: begin
                next_state <= STATE_6;
            end
            STATE_6: begin
                next_state <= STATE_4; // Same encoding as STATE_4
            end
            STATE_7: begin
                next_state <= STATE_7;
            end
        endcase
        current_state <= next_state;
    end
end

endmodule