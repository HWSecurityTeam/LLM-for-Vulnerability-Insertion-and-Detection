module fsm_module ( 
    input clk,
    input reset,
    output reg [2:0] current_state,
    output reg [2:0] next_state
);

parameter STATE_A = 3'b000;
parameter STATE_B = 3'b001;
parameter STATE_C = 3'b010;
parameter STATE_D = 3'b011;
parameter STATE_E = 3'b100;
parameter STATE_F = 3'b100; // Same encoding as STATE_E

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_A;
        next_state <= STATE_A;
    end else begin
        case (current_state)
            STATE_A: begin
                next_state <= STATE_B;
            end
            STATE_B: begin
                next_state <= STATE_C;
            end
            STATE_C: begin
                next_state <= STATE_D;
            end
            STATE_D: begin
                next_state <= STATE_E;
            end
            STATE_E, STATE_F: begin
                next_state <= STATE_E;
            end
        endcase
        current_state <= next_state;
    end
end

endmodule