module fsm_module (
    input clk,
    input reset,
    input [7:0] subtractor_input,
    output reg [7:0] output
);

parameter STATE_A = 2'b00;
parameter STATE_B = 2'b01;
parameter STATE_C = 2'b10;

reg [1:0] current_state, next_state;

always @ (posedge clk) begin
    if (reset) begin
        current_state <= STATE_A;
        output <= 0;
    end else begin
        current_state <= next_state;
        case (current_state)
            STATE_A: begin
                if (subtractor_input > output) begin
                    next_state <= STATE_B;
                    output <= subtractor_input - output;
                end else begin
                    next_state <= STATE_C;
                    output <= output - subtractor_input;
                end
            end
            STATE_B: begin
                next_state <= STATE_A;
                output <= subtractor_input - output;
            end
            default: begin
                next_state <= STATE_A;
                output <= output;
            end
        endcase
    end
end

endmodule