module fsm_module (
    input clk,
    input reset,
    input data_in,
    output reg data_out
);

parameter MAX_COUNT = 3;
parameter STATE_0 = 0;
parameter STATE_1 = 1;
parameter STATE_2 = 2;

reg [1:0] current_state;
reg [1:0] next_state;
reg [1:0] counter;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_0;
        counter <= 0;
    end else begin
        current_state <= next_state;
        counter <= counter + 1;
    end
end

always @(*) begin
    case (current_state)
        STATE_0: begin
            if (counter == MAX_COUNT) begin
                next_state = STATE_1;
                counter = 0;
            end else begin
                next_state = STATE_0;
            end
            data_out = 0;
        end
        STATE_1: begin
            if (counter == MAX_COUNT) begin
                next_state = STATE_2;
                counter = 0;
            end else begin
                next_state = STATE_1;
            end
            data_out = data_in;
        end
        default: begin
            if (counter == MAX_COUNT) begin
                next_state = STATE_0;
                counter = 0;
            end else begin
                next_state = current_state;
            end
            data_out = 1;
        end
    endcase
end

endmodule