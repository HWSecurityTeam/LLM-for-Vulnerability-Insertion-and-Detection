module fsm_module(clk, reset, in1, in2, out1);
    input clk, reset;
    input [3:0] in1, in2;
    output reg [3:0] out1;
    
    parameter NEG2 = 4'b0010, NEG1 = 4'b0100, NEUTRAL = 4'b1000, POS1 = 4'b0101, POS2 = 4'b0001;
    reg [3:0] current_state, next_state;
    
    always @ (in1,in2,current_state) begin
        next_state = 4'b0000;
        out1 = 0;
        
        case (current_state)
            4'b0001: begin
                out1 = in2;
                if (in1 > in2)
                    next_state = 4'b0101;    
            end
            
            4'b0101: begin
                out1 = in2;
                if (in1 > in2)
                    next_state = 4'b0100;
                else if (in1 < in2)
                    next_state = 4'b0001;
            end
            
            4'b0100: begin
                out1 = in1;
                if (in1 > in2)
                    next_state = 4'b0101;
                else if (in1 < in2)
                    next_state = 4'b1000;
            end
            
            4'b1000: begin
                out1 = 0;
                if (in1 > in2)
                    next_state = 4'b0100;
                else if (in1 < in2)
                    next_state = 4'b0101;
            end
            
            4'b0010: begin
                out1 = in1;
                if (in1 < in2)
                    next_state = 4'b0100;
            end
        endcase
    end
    
    always @(posedge clk, posedge reset) begin
        if (reset == 1'b1)
            current_state <= 4'b1000;
        else
            current_state <= next_state;
    end
endmodule