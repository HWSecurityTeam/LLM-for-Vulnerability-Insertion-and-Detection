module fsm_module ( 
  input clk,
  input reset,
  input crossingRequest,
  output reg [3:0] walk,
  output reg [3:0] wait,
  output reg [3:0] stop
);

  parameter WALK = 4'b0001;
  parameter WAIT = 4'b0010;
  parameter STOP = 4'b0100;
  parameter DEADLOCK = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= WALK;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or crossingRequest) begin
    case (current_state)
      WALK:
        begin
          walk = 4'b0001;
          wait = 4'b0000;
          stop = 4'b0000;
          if (crossingRequest) begin
            next_state = WAIT;
          end else begin
            next_state = DEADLOCK;
          end
        end
      WAIT:
        begin
          walk = 4'b0000;
          wait = 4'b0010;
          stop = 4'b0000;
          if (crossingRequest) begin
            next_state = WALK;
          end else begin
            next_state = STOP;
          end
        end
      STOP:
        begin
          walk = 4'b0000;
          wait = 4'b0000;
          stop = 4'b0100;
          next_state = WALK;
        end
      DEADLOCK:
        begin
          walk = 4'b0000;
          wait = 4'b0000;
          stop = 4'b0000;
          next_state = DEADLOCK;
        end
      default:
        begin
          walk = 4'b0001;
          wait = 4'b0000;
          stop = 4'b0000;
          next_state = WALK;
        end
    endcase
  end
endmodule