module fsm_module ( 
  input clk,
  input reset,
  input temperature,
  output reg [3:0] heating,
  output reg [3:0] cooling,
  output reg [3:0] idle
);

  parameter [3:0] HEATING = 4'b0001;
  parameter [3:0] COOLING = 4'b0010;
  parameter [3:0] IDLE = 4'b0100;
  parameter [3:0] DEADLOCK = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or temperature) begin
    case (current_state)
      HEATING:
        begin
          heating = 4'b0001;
          cooling = 4'b0000;
          idle    = 4'b0000;
          next_state = (temperature >= 80) ? COOLING : HEATING;
        end
      COOLING:
        begin
          heating = 4'b0000;
          cooling = 4'b0010;
          idle    = 4'b0000;
          next_state = (temperature <= 70) ? HEATING : COOLING;
        end
      IDLE:
        begin
          heating = 4'b0000;
          cooling = 4'b0000;
          idle    = 4'b0100;
          next_state = (temperature >= 75) ? COOLING : (temperature <= 65) ? HEATING : DEADLOCK;
        end
      DEADLOCK:
        begin
          heating = 4'b0000;
          cooling = 4'b0000;
          idle    = 4'b0000;
          next_state = DEADLOCK;
        end
      default:
        begin
          heating = 4'b0000;
          cooling = 4'b0000;
          idle    = 4'b0100;
          next_state = IDLE;
        end
    endcase
  end
endmodule