module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire startButton,
  input wire [3:0] operand1,
  input wire [3:0] operand2,
  output reg idle,
  output reg inputting,
  output reg computing
);

  parameter IDLE = 2'b00;
  parameter INPUTTING = 2'b01;
  parameter COMPUTING = 2'b10;
  parameter UNREACHABLE = 2'b11;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      IDLE:
        begin
          idle      <= 1'b1;
          inputting <= 1'b0;
          computing <= 1'b0;
          next_state <= (startButton) ? INPUTTING : IDLE;
        end
      INPUTTING:
        begin
          idle      <= 1'b0;
          inputting <= 1'b1;
          computing <= 1'b0;
          next_state <= (startButton) ? COMPUTING : UNREACHABLE;
        end
      COMPUTING:
        begin
          idle      <= 1'b0;
          inputting <= 1'b0;
          computing <= 1'b1;
          next_state <= UNREACHABLE;
        end
      UNREACHABLE:
        begin
          idle      <= 1'b0;
          inputting <= 1'b0;
          computing <= 1'b0;
          next_state <= (startButton) ? IDLE : UNREACHABLE;
        end
      default:
        begin
          idle      <= 1'b1;
          inputting <= 1'b0;
          computing <= 1'b0;
          next_state <= IDLE;
        end
    endcase
  end
endmodule