module fsm_module(clk, reset, in, out);
    parameter zero=2'b00, one1=2'b01, two1s=2'b10;
    output reg out;
    input clk, reset, in;
    reg [1:0] current_state, next_state;
    
    always @(posedge clk or posedge reset) begin
        if (reset)
            current_state <= zero;
        else
            current_state <= next_state;
    end
    
    always @(current_state or in) begin
        case (current_state)
            2'b00: begin
                out = 1'b0;
                if (in)
                    next_state=2'b01;
                else
                    next_state=2'b00;
            end
            2'b01: begin
                out = 1'b0;
                if (in)
                    next_state=2'b11;
                else
                    next_state=2'b00;
            end
            2'b11: begin
                out = 1'b1;
                if (in)
                    next_state=2'b10;
                else
                    next_state=2'b00;
            end
        endcase
    end
    
endmodule