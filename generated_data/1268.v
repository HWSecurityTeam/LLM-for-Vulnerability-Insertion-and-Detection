module fsm_module ( 
  input clk,
  input reset,
  input startButton,
  input stopButton,
  input pauseButton,
  output reg [3:0] state
);

  parameter STOPPED = 4'b0001;
  parameter RUNNING = 4'b0010;
  parameter PAUSED = 4'b0100;
  parameter DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= STOPPED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      STOPPED:
        begin
          state = STOPPED;
          next_state = (startButton) ? RUNNING : STOPPED;
        end
      RUNNING:
        begin
          state = RUNNING;
          next_state = (stopButton) ? STOPPED : (pauseButton) ? PAUSED : RUNNING;
        end
      PAUSED:
        begin
          state = PAUSED;
          next_state = (startButton) ? RUNNING : PAUSED;
        end
      DEAD:
        begin
          state = DEAD;
          next_state = DEAD;
        end
      default:
        begin
          state = STOPPED;
          next_state = STOPPED;
        end
    endcase
  end
endmodule