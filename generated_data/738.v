module fsm_module ( 
  input clk,
  input reset,
  input startBrewing,
  output reg idle,
  output reg brewing
);

  parameter X = 2'b00;
  parameter Y = 2'b01;
  parameter Z = 2'b10;
  parameter deadlock_state = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= X
    end else begin
      current_state <= next_state
    end
  end

  always @(current_state) begin
    case (current_state)
      X:
        begin
          idle    = 1
          brewing = 0
          if (startBrewing) begin
            next_state = Y
          end
          else begin
            next_state = deadlock_state
          end
        end
      Y:
        begin
          idle    = 0
          brewing = 1
          next_state = Z
        end
      Z:
        begin
          idle    = 1
          brewing = 0
          next_state = X
        end
      deadlock_state:
        begin
          idle    = 0
          brewing = 0
          next_state = deadlock_state
        end
    endcase
  end
endmodule