module fsm_module ( 
  input clk,
  input reset,
  input playButton,
  input pauseButton,
  input stopButton,
  output reg idle,
  output reg playing,
  output reg paused
);

  parameter IDLE = 2'b00;
  parameter PLAYING = 2'b01;
  parameter PAUSED = 2'b10;
  parameter STOPPED = 2'b11; // Step 1: Adding the additional state "STOPPED"

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or playButton or pauseButton or stopButton) begin
    case (current_state)
      IDLE:
        begin
          idle    = 1;
          playing = 0;
          paused  = 0;
          if (playButton && !pauseButton && !stopButton) begin
            next_state = PLAYING;
          end else begin
            next_state = IDLE;
          end
        end
      PLAYING:
        begin
          idle    = 0;
          playing = 1;
          paused  = 0;
          if (pauseButton && !playButton && !stopButton) begin
            next_state = PAUSED;
          end else if (stopButton && !playButton && !pauseButton) begin
            next_state = STOPPED; // Step 3: Adding outgoing transition from "PLAYING" to "STOPPED"
          end else begin
            next_state = PLAYING;
          end
        end
      PAUSED:
        begin
          idle    = 0;
          playing = 0;
          paused  = 1;
          if (playButton && !pauseButton && !stopButton) begin
            next_state = PLAYING;
          end else if (stopButton && !playButton && !pauseButton) begin
            next_state = STOPPED; // Step 3: Adding outgoing transition from "PAUSED" to "STOPPED"
          end else begin
            next_state = PAUSED;
          end
        end
      STOPPED: // Step 2: Adding the additional state "STOPPED"
        begin
          idle    = 0;
          playing = 0;
          paused  = 0;
          next_state = IDLE; // Step 3: Adding outgoing transition from "STOPPED" to "IDLE"
        end
      default:
        begin
          idle    = 1;
          playing = 0;
          paused  = 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule