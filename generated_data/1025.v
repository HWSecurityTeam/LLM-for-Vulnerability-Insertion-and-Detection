module fsm_module ( 
  input clk,
  input reset,
  input startBrewing,
  input startDispensing,
  output reg idle,
  output reg brewing,
  output reg dispensing
);

  parameter IDLE = 2'b00;
  parameter BREWING = 2'b01;
  parameter DISPENSING = 2'b10;
  parameter DEADLOCK_STATE = 2'b11; //adding new state

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      IDLE:
        begin
          idle       = 1;
          brewing    = 0;
          dispensing = 0;
          if (0) begin
            next_state = BREWING;
          end
          else begin
            next_state = DEADLOCK_STATE; //step 2: connecting IDLE to deadlock_state
          end
        end
      BREWING:
        begin
          idle       = 0;
          brewing    = 1;
          dispensing = 0;
          if (!startBrewing) begin
            next_state = IDLE;
          end
          else begin
            next_state = DISPENSING;
          end
        end
      DISPENSING:
        begin
          idle       = 0;
          brewing    = 0;
          dispensing = 1;
          if (!startDispensing) begin
            next_state = IDLE;
          end
          else begin
            next_state = DEADLOCK_STATE; //step 2: connecting DISPENSING to deadlock_state
          end
        end
      DEADLOCK_STATE: //step 3: adding deadlock_state with self-connecting loop
        begin
          idle       = 0;
          brewing    = 0;
          dispensing = 0;
          next_state  = DEADLOCK_STATE;
        end
      default:
        begin
          idle       = 1;
          brewing    = 0;
          dispensing = 0;
          next_state  = IDLE;
        end
    endcase
  end
endmodule