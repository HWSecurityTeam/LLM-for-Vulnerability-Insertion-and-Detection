module fsm_module ( 
  input clk,
  input reset,
  input startBrewing,
  output reg [2:0] idle,
  output reg [2:0] brewing
);

  parameter IDLE = 3'b001;
  parameter BREWING = 3'b010;
  parameter UNREACHABLE = 3'b100;

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle    = 3'b001;
          brewing = 3'b000;
          next_state = IDLE;
          if (startBrewing) begin
            next_state = BREWING;
          end
        end
      BREWING:
        begin
          idle    = 3'b000;
          brewing = 3'b010;
          next_state = UNREACHABLE;
        end
      UNREACHABLE:
        begin
          idle    = 3'b000;
          brewing = 3'b000;
          next_state = {BREWING, IDLE};
        end
      default:
        begin
          idle    = 3'b001;
          brewing = 3'b000;
          next_state = IDLE;
        end
    endcase
  end
endmodule