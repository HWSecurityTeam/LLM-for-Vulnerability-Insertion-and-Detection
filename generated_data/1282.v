module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire floorUp,
  input wire floorDown,
  output reg [3:0] currentFloor,
  output reg doorOpen,
  output reg doorClose,
  output reg motorUp,
  output reg motorDown
);

  parameter FLOOR_1 = 4'b0001;
  parameter FLOOR_2 = 4'b0010;
  parameter FLOOR_3 = 4'b0100;
  parameter FLOOR_4 = 4'b1000;
  parameter DEAD_STATE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= FLOOR_1;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      FLOOR_1:
        begin
          currentFloor = FLOOR_1;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = FLOOR_1;
          if (floorUp) begin
            next_state = FLOOR_2;
            motorUp   = 1'b1;
          end
          if (floorDown) begin
            next_state = FLOOR_1;
            motorDown = 1'b0;
          end
        end
      FLOOR_2:
        begin
          currentFloor = FLOOR_2;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = FLOOR_2;
          if (floorUp) begin
            next_state = FLOOR_3;
            motorUp   = 1'b1;
          end
          if (floorDown) begin
            next_state = FLOOR_1;
            motorDown = 1'b1;
          end
        end
      FLOOR_3:
        begin
          currentFloor = FLOOR_3;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = FLOOR_3;
          if (floorUp) begin
            next_state = FLOOR_4;
            motorUp   = 1'b1;
          end
          if (floorDown) begin
            next_state = FLOOR_2;
            motorDown = 1'b1;
          end
        end
      FLOOR_4:
        begin
          currentFloor = FLOOR_4;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = FLOOR_4;
          if (floorUp) begin
            next_state = FLOOR_4;
            motorUp   = 1'b0;
          end
          if (floorDown) begin
            next_state = FLOOR_3;
            motorDown = 1'b1;
          end
        end
      default:
        begin
          currentFloor = FLOOR_1;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = FLOOR_1;
        end
      DEAD_STATE:
        begin
          currentFloor = 4'b0000;
          doorOpen    = 1'b0;
          doorClose   = 1'b0;
          motorUp     = 1'b0;
          motorDown   = 1'b0;
          next_state   = DEAD_STATE;
        end
    endcase
  end
endmodule