module fsm_module ( 
  input clk,
  input reset,
  input startBrewing,
  output reg idle,
  output reg brewing
);

  parameter IDLE = 2'b00;
  parameter BREWING = 2'b01;
  parameter IDLE_AGAIN = 2'b00; //same encoding as IDLE
  parameter DEADLOCK_STATE = 2'b10; //new state added for deadlock

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE
    end else begin
      current_state <= next_state
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle    = 1
          brewing = 0
          next_state = IDLE_AGAIN //same encoding as IDLE
          if (startBrewing) begin
            next_state = BREWING
          end
        end
      BREWING:
        begin
          idle    = 0
          brewing = 1
          next_state = IDLE_AGAIN //same encoding as IDLE
        end
      DEADLOCK_STATE: //added for deadlock
        begin
          idle    = 0
          brewing = 0
          next_state = DEADLOCK_STATE //self-connecting loop for deadlock
        end
      default:
        begin
          idle    = 1
          brewing = 0
          next_state = DEADLOCK_STATE //modified to connect initial state X to deadlock_state
        end
    endcase
  end
endmodule