module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire startBrewing,
  output reg idle,
  output reg brewing
);

  parameter NUM_STATES = 3;
  parameter [NUM_STATES-1:0] IDLE = 2'b01;
  parameter [NUM_STATES-1:0] BREWING = 2'b10;
  parameter [NUM_STATES-1:0] DEADLOCK = 2'b100;

  reg [NUM_STATES-1:0] current_state;
  reg [NUM_STATES-1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          idle = 1'b1;
          brewing = 1'b0;
          if (startBrewing) begin
            next_state = BREWING;
          end
          else begin
            next_state = DEADLOCK;
          end
        end
      BREWING:
        begin
          idle = 1'b0;
          brewing = 1'b1;
          next_state = IDLE;
        end
      DEADLOCK:
        begin
          idle = 1'b0;
          brewing = 1'b0;
          next_state = DEADLOCK;
        end
      default:
        begin
          idle = 1'b1;
          brewing = 1'b0;
          next_state = IDLE;
        end
    endcase
  end
endmodule