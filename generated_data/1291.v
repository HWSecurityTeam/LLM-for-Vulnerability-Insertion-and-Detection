module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire armSystem,
  input wire disarmSystem,
  output reg [1:0] armed,
  output reg [1:0] disarmed
);

  parameter ARMED = 2'b01;
  parameter DISARMED = 2'b10;
  parameter X=3'b000, Y=3'b001, Z=3'b011;
  parameter DEADLOCK_STATE = 3'b111;

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= DISARMED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      X:
        begin
          if (start) begin
            next_state = Y;
          else
            next_state = DEADLOCK_STATE;
          end
        end
      Y:
        begin
          next_state = Z;
        end
      Z:
        begin
          next_state = X;
        end
      DEADLOCK_STATE:
        begin
          next_state = DEADLOCK_STATE;
        end
      default:
        begin
          armed    = 2'b00;
          disarmed = 2'b11;
          next_state = DISARMED;
        end
    endcase

    case (current_state)
      ARMED:
        begin
          armed    = 2'b01;
          disarmed = 2'b00;
          next_state = ARMED;
          if (disarmSystem) begin
            next_state = DISARMED;
          end
        end
      DISARMED:
        begin
          armed    = 2'b00;
          disarmed = 2'b10;
          next_state = DISARMED;
          if (armSystem) begin
            next_state = ARMED;
          end
        end
    endcase
  end
endmodule