module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire startButton,
  input wire stopButton,
  input wire pauseButton,
  output reg stopped,
  output reg running,
  output reg paused
);

  parameter STOPPED = 4'b0001;
  parameter RUNNING = 4'b0010;
  parameter PAUSED = 4'b0100;
  parameter DEADLOCK = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= STOPPED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(startButton, stopButton, pauseButton, current_state) begin
    case (current_state)
      STOPPED:
        begin
          stopped = 1'b1;
          running = 1'b0;
          paused  = 1'b0;
          if (startButton)
            next_state = RUNNING;
          else
            next_state = DEADLOCK;
        end
      RUNNING:
        begin
          stopped = 1'b0;
          running = 1'b1;
          paused  = 1'b0;
          if (stopButton)
            next_state = STOPPED;
          else if (pauseButton)
            next_state = PAUSED;
          else
            next_state = RUNNING;
        end
      PAUSED:
        begin
          stopped = 1'b0;
          running = 1'b0;
          paused  = 1'b1;
          if (startButton)
            next_state = RUNNING;
          else
            next_state = PAUSED;
        end
      DEADLOCK:
        begin
          stopped = 1'b0;
          running = 1'b0;
          paused  = 1'b0;
          next_state = DEADLOCK;
        end
      default:
        begin
          stopped = 1'b1;
          running = 1'b0;
          paused  = 1'b0;
          next_state = STOPPED;
        end
    endcase
  end
endmodule