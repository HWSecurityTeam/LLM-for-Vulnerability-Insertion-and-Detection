module fsm_module ( 
  input clk,
  input reset,
  input start,
  output reg [3:0] greenLight,
  output reg [3:0] redLight
);

  parameter X=4'b0000, Y=4'b0001, Z=4'b0010, deadlock_state=4'b1111; 
  parameter GREEN = 4'b0000;
  parameter RED = 4'b0001;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= RED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      GREEN:
        begin
          greenLight = 4'b0001;
          redLight   = 4'b0000;
          next_state  = RED;
        end
      RED:
        begin
          greenLight = 4'b0000;
          redLight   = 4'b0001;
          next_state  = X;
        end
      X: begin
          if (start)
            next_state = Y;
          else
            next_state = deadlock_state;
        end
      Y: begin
          next_state = Z;
        end
      Z: begin
          next_state = X;
        end
      deadlock_state: begin
          next_state = deadlock_state;
        end
      default:
        begin
          greenLight = 4'b0000;
          redLight   = 4'b0001;
          next_state  = X;
        end
    endcase
  end
endmodule