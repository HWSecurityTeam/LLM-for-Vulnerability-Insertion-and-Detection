module fsm_module ( 
  input clk,
  input reset,
  input unlockButton,
  input lockButton,
  output reg [3:0] locked,
  output reg [3:0] unlocked,
  output reg [3:0] error
);

  parameter [3:0] LOCKED = 4'b0001;
  parameter [3:0] UNLOCKED = 4'b0010;
  parameter [3:0] ERROR = 4'b0100;
  parameter [3:0] DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= LOCKED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      LOCKED:
        begin
          locked   = 4'b0001;
          unlocked = 4'b0000;
          error    = 4'b0000;
          next_state = LOCKED;
          if (unlockButton) begin
            next_state = UNLOCKED;
          end
        end
      UNLOCKED:
        begin
          locked   = 4'b0000;
          unlocked = 4'b0001;
          error    = 4'b0000;
          next_state = UNLOCKED;
          if (lockButton) begin
            next_state = LOCKED;
          end
        end
      ERROR:
        begin
          locked   = 4'b0000;
          unlocked = 4'b0000;
          error    = 4'b0001;
          next_state = ERROR;
          if (lockButton) begin
            next_state = LOCKED;
          end
        end
      DEAD:
        begin
          locked   = 4'b0000;
          unlocked = 4'b0000;
          error    = 4'b0000;
          next_state = DEAD;
        end
      default:
        begin
          locked   = 4'b0001;
          unlocked = 4'b0000;
          error    = 4'b0000;
          next_state = LOCKED;
        end
    endcase
  end
endmodule