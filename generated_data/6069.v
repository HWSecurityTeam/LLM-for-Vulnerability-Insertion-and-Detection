module fsm_module (
    input clk,
    input reset,
    input [7:0] data_in,
    output reg [7:0] data_out,
    output reg [2:0] current_state,
    output reg [2:0] next_state
);

parameter STATE_0 = 3'b000;
parameter STATE_1 = 3'b001;
parameter STATE_2 = 3'b010;
parameter UNUSED_STATE = 3'b011;

reg [7:0] subtractor_out;
reg [2:0] state_reg;

always @(posedge clk) begin
    if (reset) begin
        state_reg <= STATE_0;
        data_out <= 0;
    end else begin
        case (state_reg)
            STATE_0: begin
                subtractor_out <= data_in - 1;
                data_out <= subtractor_out;
                next_state <= STATE_1;
            end
            STATE_1: begin
                subtractor_out <= data_out - 1;
                data_out <= subtractor_out;
                if (subtractor_out == 0) begin
                    next_state <= STATE_2;
                end else begin
                    next_state <= STATE_1;
                end
            end
            STATE_2: begin
                subtractor_out <= data_in - 1;
                data_out <= subtractor_out;
                next_state <= UNUSED_STATE;
            end
            default: begin
                next_state <= UNUSED_STATE;
            end
        endcase
        state_reg <= next_state;
    end
end

endmodule