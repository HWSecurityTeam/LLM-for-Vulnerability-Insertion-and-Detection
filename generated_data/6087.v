module fsm_module (
    input clk,
    input reset,
    input [7:0] input_data,
    output reg [7:0] output_data
);

parameter STATE_A = 2'b00;
parameter STATE_B = 2'b01;
parameter STATE_C = 2'b10;
parameter STATE_M = 2'b11;

reg [1:0] current_state;
reg [1:0] next_state;

always @ (posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_A;
        output_data <= 0;
    end else begin
        current_state <= next_state;
        case (current_state)
            STATE_A: begin
                if (input_data > 10) begin
                    next_state <= STATE_B;
                    output_data <= input_data - 10;
                end else begin
                    next_state <= STATE_A;
                    output_data <= input_data;
                end
            end
            STATE_B: begin
                if (input_data < 5) begin
                    next_state <= STATE_C;
                    output_data <= input_data + 10;
                end else begin
                    next_state <= STATE_B;
                    output_data <= input_data;
                end
            end
            STATE_C: begin
                if (input_data == 0) begin
                    next_state <= STATE_M;
                    output_data <= 0;
                end else if (input_data > 5) begin
                    next_state <= STATE_A;
                    output_data <= input_data - 5;
                end else begin
                    next_state <= STATE_C;
                    output_data <= input_data;
                end
            end
            STATE_M: begin
                next_state <= STATE_M;
                output_data <= 0;
            end
        endcase
    end
end

endmodule