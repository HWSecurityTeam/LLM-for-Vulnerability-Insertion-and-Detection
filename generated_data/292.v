module fsm_module ( 
  input clk,
  input reset,
  input startBrewing,
  output reg idle,
  output reg brewing
);

  parameter IDLE = 2'b00;
  parameter BREWING = 2'b01;

  reg [1:0] current_state;
  reg [1:0] next_state;
  reg startBrewing_delayed;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, startBrewing_delayed) begin
    startBrewing_delayed = startBrewing; // store startBrewing in a separate register
    case (current_state)
      IDLE:
        begin
          idle    = 1;
          brewing = 0;
          next_state = IDLE;
          if (startBrewing_delayed) begin // check the delayed startBrewing value
            next_state = BREWING;
          end
        end
      BREWING:
        begin
          idle    = 0;
          brewing = 1;
          next_state = IDLE;
        end
      default:
        begin
          idle    = 1;
          brewing = 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule