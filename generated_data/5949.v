module fsm_module ( 
    input clk,
    input reset,
    output reg out1,
    output reg out2
);

parameter S0 = 2'b00, S1 = 2'b01, S2 = 2'b11, S3 = 2'b10;
reg [1:0] current_state, next_state;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= S0;
        out1 <= 0;
        out2 <= 0;
    end else begin
        current_state <= next_state;
        case (current_state)
            S0: begin
                out1 <= 0;
                out2 <= 0;
                next_state <= S1;
            end
            S1: begin
                out1 <= 1;
                out2 <= 0;
                next_state <= S2;
            end
            S2: begin
                out1 <= 1;
                out2 <= 1;
                next_state <= S3;
            end
            S3: begin
                out1 <= 0;
                out2 <= 1;
                next_state <= S0;
            end
        endcase
    end
end

endmodule