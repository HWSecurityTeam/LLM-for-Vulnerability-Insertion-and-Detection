module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire upButton,
  input wire downButton,
  output reg idle,
  output reg movingUp,
  output reg movingDown
);

  parameter WIDTH = 4;
  parameter IDLE = {WIDTH{1'b0}};
  parameter MOVING_UP = {WIDTH{1'b0}};
  parameter MOVING_DOWN = {WIDTH{1'b0}};
  parameter UNREACHABLE = {WIDTH{1'b0}};

  reg [WIDTH-1:0] current_state;
  reg [WIDTH-1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @* begin
    case (current_state)
      IDLE:
        begin
          idle      = 1'b1;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          next_state = IDLE;
          if (upButton) begin
            next_state = MOVING_UP;
          end
          if (downButton) begin
            next_state = MOVING_DOWN;
          end
        end
      MOVING_UP:
        begin
          idle      = 1'b0;
          movingUp   = 1'b1;
          movingDown = 1'b0;
          next_state = UNREACHABLE;
        end
      MOVING_DOWN:
        begin
          idle      = 1'b0;
          movingUp   = 1'b0;
          movingDown = 1'b1;
          next_state = UNREACHABLE;
        end
      UNREACHABLE:
        begin
          idle      = 1'b0;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          next_state = IDLE;
        end
      default:
        begin
          idle      = 1'b1;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          next_state = IDLE;
        end
    endcase
  end
endmodule