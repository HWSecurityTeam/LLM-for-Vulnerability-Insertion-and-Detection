module fsm_module ( 
    input clk,
    input reset,
    input in,
    output reg out
);

parameter S0 = 3'b000;
parameter S1 = 3'b001;
parameter S2 = 3'b010;
parameter S3 = 3'b011;
parameter S4 = 3'b011; // Same encoding as S3

reg [2:0] current_state;
reg [2:0] next_state;

always @(posedge clk or negedge reset) begin
    if (reset == 0) begin
        current_state <= S0;
        next_state <= S0;
    end else begin
        current_state <= next_state;
        case (current_state)
            S0: begin
                if (in == 1) begin
                    next_state <= S1;
                    out <= 0;
                end else begin
                    next_state <= S0;
                    out <= 0;
                end
            end
            S1: begin
                if (in == 1) begin
                    next_state <= S2;
                    out <= 0;
                end else begin
                    next_state <= S0;
                    out <= 0;
                end
            end
            S2: begin
                if (in == 1) begin
                    next_state <= S3;
                    out <= 0;
                end else begin
                    next_state <= S0;
                    out <= 0;
                end
            end
            S3: begin
                next_state <= S4;
                out <= 1;
            end
            S4: begin
                next_state <= S4;
                out <= 1;
            end
        endcase
    end
end

endmodule