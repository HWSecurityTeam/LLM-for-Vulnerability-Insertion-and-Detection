module fsm_module(clk, reset, in, out);
parameter zero=2, one1=3, two1s=0;
output reg out; 
input clk, reset, in;
reg [1:0] current_state, next_state;

always @(posedge clk or posedge reset) begin
	if (reset) begin
		current_state <= zero;
	end
	else begin
		current_state <= next_state;
	end
end

always @(posedge clk) begin
	if (current_state == zero && in) begin
		next_state <= one1;
	end
	else if (current_state == one1 && in) begin
		next_state <= two1s;
	end
	else if (current_state == two1s && !in) begin
		next_state <= zero;
	end
	else begin
		next_state <= current_state;
	end
end

always @(posedge clk) begin
	if (current_state == two1s) begin
		out <= 1;
	end
	else begin
		out <= 0;
	end
end

endmodule