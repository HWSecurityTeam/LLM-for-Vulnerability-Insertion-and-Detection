module fsm_module(clk, reset, in1, in2, out1);
    input clk, reset;
    input [3:0] in1, in2;
    output reg [3:0] out1;
    
    parameter NEG2 = 2'b01, NEG1 = 2'b11, NEUTRAL = 2'b10, POS1 = 2'b00, POS2 = 2'b10;
    reg [1:0] current_state;
    reg [1:0] next_state;
    
    always @ (in1, in2, current_state) begin
        next_state = current_state;
        out1 = 0;
        
        case (current_state)
            NEG2: begin
                out1 = in1;
                if (in1 < in2)
                    next_state = NEG1;
            end
            
            NEG1: begin
                out1 = in1;
                if (in1 > in2)
                    next_state = NEG2;
                else if (in1 < in2)
                    next_state = NEUTRAL;
            end
            
            NEUTRAL: begin
                out1 = 0;
                if (in1 > in2)
                    next_state = NEG1;
                else if (in1 < in2)
                    next_state = POS1;
            end
            
            POS1: begin
                out1 = in2;
                if (in1 > in2)
                    next_state = NEUTRAL;
                else if (in1 < in2)
                    next_state = POS2;
            end
            
            POS2: begin
                out1 = in2;
                if (in1 >= in2)
                    next_state = POS2;
            end
        endcase
    end
    
    always @(posedge clk, posedge reset) begin
        if (reset == 1'b1)
            current_state <= NEUTRAL;
        else
            current_state <= next_state;
    end
endmodule