module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire temperature,
  output reg idle,
  output reg heating,
  output reg cooling
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] HEATING = 4'b0010;
  parameter [3:0] COOLING = 4'b0100;
  parameter [3:0] DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(temperature) begin
    case (current_state)
      IDLE:
        begin
          idle    <= 1'b1;
          heating <= 1'b0;
          cooling <= 1'b0;
          next_state = IDLE;
          if (temperature < 70) begin
            next_state = HEATING;
          end
          if (temperature > 80) begin
            next_state = COOLING;
          end
        end
      HEATING:
        begin
          idle    <= 1'b0;
          heating <= 1'b1;
          cooling <= 1'b0;
          next_state = IDLE;
          if (temperature >= 70) begin
            next_state = IDLE;
          end
        end
      COOLING:
        begin
          idle    <= 1'b0;
          heating <= 1'b0;
          cooling <= 1'b1;
          next_state = IDLE;
          if (temperature <= 80) begin
            next_state = IDLE;
          end
        end
      DEAD:
        begin
          idle    <= 1'b0;
          heating <= 1'b0;
          cooling <= 1'b0;
          next_state = DEAD;
        end
      default:
        begin
          idle    <= 1'b1;
          heating <= 1'b0;
          cooling <= 1'b0;
          next_state = DEAD;
        end
    endcase
  end
endmodule