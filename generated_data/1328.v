module fsm_module ( 
  parameter COUNT0 = 4'b0001,
  parameter COUNT1 = 4'b0010,
  parameter COUNT2 = 4'b0100,
  parameter DEADLOCK = 4'b1000
) (
  input clk,
  input reset,
  input start,
  output reg [3:0] count
);

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= COUNT0;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      COUNT0:
        begin
          if (start)
            next_state <= COUNT1;
          else
            next_state <= DEADLOCK;
        end
      COUNT1:
        begin
          count <= 4'b0010;
          next_state <= COUNT2;
        end
      COUNT2:
        begin
          count <= 4'b0100;
          next_state <= COUNT0;
        end
      DEADLOCK:
        begin
          count <= 4'b0000;
          next_state <= DEADLOCK;
        end
      default:
        begin
          count <= 4'b0000;
          next_state <= COUNT0;
        end
    endcase
  end
endmodule