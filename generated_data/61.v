module fsm_module ( 
  input clk,
  input reset,
  input startButton,
  output reg idle,
  output reg washing,
  output reg complete
);

  parameter IDLE = 2'b00;
  parameter WASHING = 2'b01;
  parameter COMPLETE = 2'b10;
  parameter DEADLOCK_STATE = 2'b11; //adding a new state

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      IDLE:
        begin
          idle     = 1;
          washing  = 0;
          complete = 0;
          next_state = (startButton) ? WASHING : DEADLOCK_STATE; //step 2: connecting IDLE to deadlock_state
        end
      WASHING:
        begin
          idle     = 0;
          washing  = 1;
          complete = 0;
          next_state = (clk) ? COMPLETE : WASHING;
        end
      COMPLETE:
        begin
          idle     = 0;
          washing  = 0;
          complete = 1;
          next_state = IDLE;
        end
      DEADLOCK_STATE: //step 3: adding a new state with self-connecting loop
        begin
          idle     = 0;
          washing  = 0;
          complete = 0;
          next_state = DEADLOCK_STATE;
        end
      default:
        begin
          idle     = 1;
          washing  = 0;
          complete = 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule