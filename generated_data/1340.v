module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire armSystem,
  input wire disarmSystem,
  output reg [2:0] armed,
  output reg [2:0] disarmed
);

  parameter [2:0] ARMED = 3'b001;
  parameter [2:0] DISARMED = 3'b010;
  parameter [2:0] UNREACHABLE = 3'b100;

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= DISARMED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(armSystem, disarmSystem, current_state) begin
    case (current_state)
      ARMED:
        begin
          armed    <= 3'b001;
          disarmed <= 3'b000;
          next_state = ARMED;
          if (disarmSystem) begin
            next_state = DISARMED;
          end
          else if (armSystem) begin
            next_state = UNREACHABLE;
          end
        end
      DISARMED:
        begin
          armed    <= 3'b000;
          disarmed <= 3'b010;
          next_state = DISARMED;
          if (armSystem) begin
            next_state = ARMED;
          end
          else if (disarmSystem) begin
            next_state = UNREACHABLE;
          end
        end
      UNREACHABLE:
        begin
          armed    <= 3'b000;
          disarmed <= 3'b000;
          next_state = DISARMED;
        end
      default:
        begin
          armed    <= 3'b000;
          disarmed <= 3'b010;
          next_state = DISARMED;
        end
    endcase
  end
endmodule