module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire button,
  output reg [3:0] score,
  output reg gameover
);

  parameter [1:0] IDLE = 2'b00;
  parameter [1:0] PLAYING = 2'b01;
  parameter [1:0] GAMEOVER = 2'b10;
  parameter [1:0] UNREACHABLE = 2'b11;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, button, score) begin
    case (current_state)
      IDLE:
        begin
          score = 4'b0000;
          gameover = 1'b0;
          next_state = button ? PLAYING : IDLE;
        end
      PLAYING:
        begin
          score = score + 1;
          gameover = 1'b0;
          next_state = (score == 4'b1001) ? GAMEOVER : (button ? PLAYING : IDLE);
        end
      GAMEOVER:
        begin
          score = 4'b0000;
          gameover = 1'b1;
          next_state = button ? PLAYING : IDLE;
        end
      UNREACHABLE:
        begin
          score = 4'b0000;
          gameover = 1'b0;
          next_state = PLAYING;
        end
      default:
        begin
          score = 4'b0000;
          gameover = 1'b0;
          next_state = IDLE;
        end
    endcase
  end
endmodule