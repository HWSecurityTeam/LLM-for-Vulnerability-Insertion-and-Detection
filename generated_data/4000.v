module fsm_module(clk, reset, in, out);
parameter zero=2, one1=3, two1s=0, M=4;
output reg out; 
input clk, reset, in;
reg [2:0] current_state, next_state;

always @(posedge clk or posedge reset) begin
	if (reset) begin
		current_state <= zero;
	end else begin
		current_state <= next_state;
	end
end

always @(current_state or in) begin
	case (current_state)
		zero: begin
			out = 0;
			if (in) begin
				next_state=one1;
			end else begin
				next_state=zero;
			end
		end
		one1: begin
			out = 0;
			if (in) begin
				next_state=two1s;
			end else begin
				next_state=zero;
			end
		end
		two1s: begin
			out = 1;
			if (in) begin
				next_state=two1s;
			end else begin
				next_state=zero;
			end
		end
		M: begin
			out = 0;
			next_state=two1s;
		end
	endcase
end

endmodule