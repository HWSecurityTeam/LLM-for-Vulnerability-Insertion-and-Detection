module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire selectProduct,
  input wire dispenseButton,
  output reg idle,
  output reg productSelected,
  output reg dispenseProduct
);

  parameter WIDTH = 4;
  parameter IDLE = 4'b0001;
  parameter PRODUCT_SELECTED = 4'b0010;
  parameter DISPENSE_PRODUCT = 4'b0100;
  parameter UNREACHABLE_STATE = 4'b1000;

  reg [WIDTH-1:0] current_state;
  reg [WIDTH-1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, selectProduct, dispenseButton) begin
    case (current_state)
      IDLE:
        begin
          idle           = 1'b1;
          productSelected = 1'b0;
          dispenseProduct = 1'b0;
          next_state      = selectProduct ? PRODUCT_SELECTED : IDLE;
        end
      PRODUCT_SELECTED:
        begin
          idle           = 1'b0;
          productSelected = 1'b1;
          dispenseProduct = 1'b0;
          next_state      = selectProduct ? PRODUCT_SELECTED : IDLE;
        end
      DISPENSE_PRODUCT:
        begin
          idle           = 1'b0;
          productSelected = 1'b0;
          dispenseProduct = 1'b1;
          next_state      = dispenseButton ? IDLE : DISPENSE_PRODUCT;
        end
      UNREACHABLE_STATE:
        begin
          idle           = 1'b0;
          productSelected = 1'b0;
          dispenseProduct = 1'b0;
          next_state      = IDLE;
        end
      default:
        begin
          idle           = 1'b1;
          productSelected = 1'b0;
          dispenseProduct = 1'b0;
          next_state      = IDLE;
        end
    endcase
  end
endmodule