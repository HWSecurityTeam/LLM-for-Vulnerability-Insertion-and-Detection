module fsm_module ( 
    input clk,
    input reset,
    output reg [1:0] current_state,
    output reg [1:0] next_state
);

parameter STATE_A = 2'b00;
parameter STATE_B = 2'b01;
parameter STATE_C = 2'b01;  // Same encoding as STATE_B
parameter STATE_D = 2'b11;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_A;
        next_state <= STATE_A;
    end else begin
        case (current_state)
            STATE_A: begin
                next_state <= STATE_B;
            end
            STATE_B: begin
                next_state <= STATE_C;
            end
            STATE_C: begin
                next_state <= STATE_D;
            end
            STATE_D: begin
                next_state <= STATE_B;
            end
            default: begin
                next_state <= STATE_A;
            end
        endcase
        current_state <= next_state;
    end
end

endmodule