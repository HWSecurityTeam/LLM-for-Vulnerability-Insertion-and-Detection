module fsm_module(clk, reset, in1, in2, out1);
	input clk, reset;
	input [3:0] in1, in2;
	output reg [3:0] out1;
	
	parameter NEG2 = 5'b10000, NEG1 = 5'b01000, NEUTRAL = 5'b00100, POS1 = 5'b00010, POS2 = 5'b00001;
	
	reg [4:0] current_state, next_state;
	
	always @(posedge clk or posedge reset) begin
	
		if (reset)
			current_state <= NEUTRAL;
		else
			current_state <= next_state;
	end
	
	always @(in1, in2, current_state) begin
	
		next_state <= current_state;
		out1 <= 0;
		
		case (current_state)
			NEG2: begin
				if (in1 < in2)
					next_state <= NEG1;
				else
					out1 <= in1;
			end
			
			NEG1: begin
				if (in1 > in2)
					next_state <= NEG2;
				else if (in1 < in2)
					next_state <= NEUTRAL;
				else
					out1 <= in1;
			end
			
			NEUTRAL: begin
				if (in1 > in2)
					next_state <= NEG1;
				else if (in1 < in2)
					next_state <= POS1;
			end
			
			POS1: begin
				if (in1 > in2)
					next_state <= NEUTRAL;
				else if (in1 < in2)
					next_state <= POS2;
				else
					out1 <= in2;
			end
			
			POS2: begin
				if (in1 > in2)
					next_state <= POS1;
				else
					out1 <= in2;	
			end

			default: begin
				out1 <= 0;
				next_state <= NEUTRAL;
			end
		endcase
	end
endmodule