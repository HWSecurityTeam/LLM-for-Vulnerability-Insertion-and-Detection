module fsm_module ( 
    input clk,
    input reset,
    output reg [2:0] output_state
);

parameter S0 = 3'b000;
parameter S1 = 3'b001;
parameter S2 = 3'b010;
parameter S3 = 3'b011;
parameter S4 = 3'b100;
parameter S5 = 3'b101;
parameter S6 = 3'b110;
parameter S7 = 3'b111;

reg [2:0] current_state;
reg [2:0] next_state;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= S0;
        next_state <= S0;
    end else begin
        current_state <= next_state;
        case (current_state)
            S0: next_state <= S1;
            S1: next_state <= S2;
            S2: next_state <= S3;
            S3: next_state <= S4;
            S4: next_state <= S5;
            S5: next_state <= S6;
            S6: next_state <= S4;
            S7: next_state <= S4;
        endcase
    end
    case (current_state)
        S0: output_state <= 3'b000;
        S1: output_state <= 3'b001;
        S2: output_state <= 3'b010;
        S3: output_state <= 3'b011;
        S4: output_state <= 3'b100;
        S5: output_state <= 3'b101;
        S6: output_state <= 3'b110;
        S7: output_state <= 3'b111;
    endcase
end

endmodule