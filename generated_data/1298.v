module fsm_module ( 
  input wire clk,
  input wire reset,
  output reg [3:0] red,
  output reg [3:0] green,
  output reg [3:0] yellow
);

parameter [3:0] RED = 4'b0001;
parameter [3:0] GREEN = 4'b0010;
parameter [3:0] YELLOW = 4'b0100;
parameter [3:0] DEADLOCK_STATE = 4'b1000;

reg [3:0] current_state;
reg [3:0] next_state;

always @(posedge clk or posedge reset) begin
  if (reset) begin
    current_state <= RED;
  end else begin
    current_state <= next_state;
  end
end

always @(current_state) begin
  case (current_state)
    RED:
      begin
        red    = 4'b0001;
        green  = 4'b0000;
        yellow = 4'b0000;
        if (start)
          next_state = GREEN;
        else
          next_state = DEADLOCK_STATE;
      end
    GREEN:
      begin
        red    = 4'b0000;
        green  = 4'b0010;
        yellow = 4'b0000;
        next_state = YELLOW;
      end
    YELLOW:
      begin
        red    = 4'b0000;
        green  = 4'b0000;
        yellow = 4'b0100;
        next_state = RED;
      end
    DEADLOCK_STATE:
      begin
        red    = 4'b0000;
        green  = 4'b0000;
        yellow = 4'b0000;
        next_state = DEADLOCK_STATE;
      end
    default:
      begin
        red    = 4'b0001;
        green  = 4'b0000;
        yellow = 4'b0000;
        next_state = GREEN;
      end
  endcase
end

endmodule