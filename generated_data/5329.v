module fsm_module (
    input wire clk,
    input wire reset,
    output wire out
);

parameter STATE_IDLE = 2'b00;
parameter STATE_WAIT = 2'b01;
parameter STATE_DONE = 2'b10;

reg [1:0] current_state;
reg [1:0] next_state;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_IDLE;
    end else begin
        current_state <= next_state;
    end
end

always @(current_state) begin
    case (current_state)
        STATE_IDLE: begin
            if (reset) begin
                next_state <= STATE_IDLE;
            end else begin
                next_state <= STATE_WAIT;
            end
        end
        STATE_WAIT: begin
            next_state <= STATE_DONE;
        end
        STATE_DONE: begin
            next_state <= STATE_IDLE;
        end
    endcase
end

assign out = (current_state == STATE_DONE);

endmodule