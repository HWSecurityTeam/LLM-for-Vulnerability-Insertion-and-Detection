module fsm_module (
  input clk,
  input reset,
  input armButton,
  input disarmButton,
  input alarmTrigger,
  output reg idle,
  output reg arming,
  output reg alarmTriggered
);

  parameter IDLE = 2'b00;
  parameter ARMING = 2'b01;
  parameter ALARM_TRIGGERED = 2'b10;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      IDLE:
        begin
          idle          = 1;
          arming        = 0;
          alarmTriggered = 0;
          next_state     = armButton ? ARMING : IDLE;
        end
      ARMING:
        begin
          idle          = 0;
          arming        = 1;
          alarmTriggered = 0;
          next_state     = disarmButton ? IDLE : (alarmTrigger ? ALARM_TRIGGERED : ARMING);
        end
      ALARM_TRIGGERED:
        begin
          idle          = 0;
          arming        = 0;
          alarmTriggered = 1;
          next_state     = disarmButton ? IDLE : IDLE;
        end
      default:
        begin
          idle          = 1;
          arming        = 0;
          alarmTriggered = 0;
          next_state     = IDLE;
        end
    endcase
  end
endmodule