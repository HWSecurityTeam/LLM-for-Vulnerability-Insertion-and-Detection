module fsm_module ( 
  input wire clk,
  input wire reset,
  output reg [3:0] redLight,
  output reg [3:0] greenLight,
  output reg [3:0] yellowLight
);

  parameter [3:0] RED = 4'b0001;
  parameter [3:0] GREEN = 4'b0010;
  parameter [3:0] YELLOW = 4'b0100;
  parameter [3:0] DEAD = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= RED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      RED:
        begin
          redLight    = 4'b0001;
          greenLight  = 4'b0000;
          yellowLight = 4'b0000;
          next_state   = GREEN;
        end
      GREEN:
        begin
          redLight    = 4'b0000;
          greenLight  = 4'b0010;
          yellowLight = 4'b0000;
          next_state   = YELLOW;
        end
      YELLOW:
        begin
          redLight    = 4'b0000;
          greenLight  = 4'b0000;
          yellowLight = 4'b0100;
          next_state   = RED;
        end
      DEAD:
        begin
          redLight    = 4'b0000;
          greenLight  = 4'b0000;
          yellowLight = 4'b0000;
          next_state   = DEAD;
        end
      default:
        begin
          redLight    = 4'b0001;
          greenLight  = 4'b0000;
          yellowLight = 4'b0000;
          next_state   = GREEN;
        end
    endcase
  end
endmodule