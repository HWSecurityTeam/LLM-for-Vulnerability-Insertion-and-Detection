module fsm_module ( 
  parameter MAIN_RED = 3'b000,
  parameter MAIN_YELLOW = 3'b001,
  parameter MAIN_GREEN = 3'b010,
  parameter SIDE_RED = 3'b011,
  parameter SIDE_YELLOW = 3'b100,
  parameter SIDE_GREEN = 3'b101,
  parameter UNREACHABLE_STATE = 3'b110 // added parameter for unreachable state
) (
  input clk,
  input reset,
  output reg [6:0] mainRoadRed,
  output reg [6:0] mainRoadYellow,
  output reg [6:0] mainRoadGreen,
  output reg [6:0] sideRoadRed,
  output reg [6:0] sideRoadYellow,
  output reg [6:0] sideRoadGreen
);

  reg [6:0] current_state;
  reg [6:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= MAIN_RED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      MAIN_RED:
        begin
          mainRoadRed   = 7'b0000001;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000000;
          sideRoadRed    = 7'b0000000;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000001;
          next_state      = MAIN_GREEN;
        end
      MAIN_YELLOW:
        begin
          mainRoadRed   = 7'b0000001;
          mainRoadYellow = 7'b0000001;
          mainRoadGreen  = 7'b0000000;
          sideRoadRed    = 7'b0000000;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000001;
          next_state      = SIDE_RED;
        end
      MAIN_GREEN:
        begin
          mainRoadRed   = 7'b0000000;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000001;
          sideRoadRed    = 7'b0000001;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000000;
          next_state      = MAIN_YELLOW;
        end
      SIDE_RED:
        begin
          mainRoadRed   = 7'b0000000;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000001;
          sideRoadRed    = 7'b0000001;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000000;
          next_state      = SIDE_GREEN;
        end
      SIDE_YELLOW:
        begin
          mainRoadRed   = 7'b0000000;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000001;
          sideRoadRed    = 7'b0000001;
          sideRoadYellow = 7'b0000001;
          sideRoadGreen  = 7'b0000000;
          next_state      = MAIN_RED;
        end
      SIDE_GREEN:
        begin
          mainRoadRed   = 7'b0000001;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000000;
          sideRoadRed    = 7'b0000000;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000001;
          next_state      = UNREACHABLE_STATE; // added unreachable state transition
        end
      UNREACHABLE_STATE:
        begin
          mainRoadRed   = 7'b0000000;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000000;
          sideRoadRed    = 7'b0000000;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000000;
          next_state      = {SIDE_GREEN, MAIN_RED, MAIN_YELLOW}; // multiple outgoing states
        end
      default:
        begin
          mainRoadRed   = 7'b0000001;
          mainRoadYellow = 7'b0000000;
          mainRoadGreen  = 7'b0000000;
          sideRoadRed    = 7'b0000000;
          sideRoadYellow = 7'b0000000;
          sideRoadGreen  = 7'b0000001;
          next_state      = MAIN_GREEN;
        end
    endcase
  end
endmodule