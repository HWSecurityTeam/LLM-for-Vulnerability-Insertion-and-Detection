module fsm_module ( 
  input clk,
  input reset,
  input temperature,
  output reg idle,
  output reg heating,
  output reg cooling
);

  parameter IDLE = 2'b00;
  parameter HEATING = 2'b01;
  parameter COOLING = 2'b10;
  parameter A = 2'b11; // Additional state

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      IDLE:
        begin
          idle    = 1;
          heating = 0;
          cooling = 0;
          next_state = IDLE;
          if (temperature < 70) begin
            next_state = HEATING;
            // CWE 367 violation: time-of-check time-of-use race condition
            if (temperature > 80) begin
              next_state = COOLING;
            end
          end
        end
      HEATING:
        begin
          idle    = 0;
          heating = 1;
          cooling = 0;
          next_state = IDLE;
          if (temperature >= 70) begin
            next_state = IDLE;
          end
        end
      COOLING:
        begin
          idle    = 0;
          heating = 0;
          cooling = 1;
          next_state = IDLE;
          if (temperature <= 80) begin
            next_state = IDLE;
          end
        end
      A:
        begin
          idle    = 0;
          heating = 0;
          cooling = 0;
          next_state = IDLE;
        end
      default:
        begin
          idle    = 1;
          heating = 0;
          cooling = 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule