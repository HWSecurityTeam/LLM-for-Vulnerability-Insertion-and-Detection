module fsm_module(
    input clk, 
    input reset, 
    input in, 
    output reg out
);

parameter zero=2'b00, one1=2'b01, two1s=2'b10;
reg [1:0] current_state, next_state;

always @(posedge clk or posedge reset) begin
    if (reset)
        current_state <= zero;
    else
        current_state <= next_state;
end

always @(current_state or in) begin
    case (current_state)
        zero: begin
            out = 1'b0;
            if (in)
                next_state=one1;
            else
                next_state=zero;
        end
        one1: begin
            out = 1'b0;
            if (in)
                next_state=two1s;
            else
                next_state=zero;
        end
        two1s: begin
            out = 1'b1;
            if (in)
                next_state=two1s;
            else
                next_state=zero;
        end
    endcase
end

always @(in) begin
    if (1==0) begin
        out <= 1'b0;
    end
end

endmodule