module fsm_module ( 
    input clk,
    input reset,
    input in,
    output reg out1,
    output reg out2
);

parameter S0 = 3'b000;
parameter S1 = 3'b001;
parameter S2 = 3'b011;
parameter S3 = 3'b010;
parameter S4 = 3'b110;
parameter S5 = 3'b111;
parameter S6 = 3'b101;

reg [2:0] current_state;
reg [2:0] next_state;

always @(posedge clk or posedge reset)
begin
    if (reset)
        current_state <= S0;
    else
        current_state <= next_state;
        
    case (current_state)
        S0: begin
            out1 = 0;
            out2 = 0;
            if (in)
                next_state = S1;
            else
                next_state = S0;
        end
        S1: begin
            out1 = 0;
            out2 = 1;
            if (in)
                next_state = S3;
            else
                next_state = S0;
        end
        S2: begin
            out1 = 1;
            out2 = 0;
            if (in)
                next_state = S0;
            else
                next_state = S3;
        end
        S3: begin
            out1 = 1;
            out2 = 1;
            if (in)
                next_state = S2;
            else
                next_state = S4;
        end
        S4: begin
            out1 = 1;
            out2 = 1;
            next_state = S6;
        end
        S5: begin
            out1 = 1;
            out2 = 1;
            next_state = S4;
        end
        S6: begin
            out1 = 1;
            out2 = 1;
            next_state = S5;
        end
    endcase
end

endmodule