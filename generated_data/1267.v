module fsm_module ( 
  input clk,
  input reset,
  output reg [4:0] current_state,
  output reg [4:0] next_state,
  output reg startCondition,
  output reg stopCondition,
  output reg [6:0] deviceAddress,
  output reg readDataRequest
);

  parameter IDLE = 5'b00001;
  parameter START = 5'b00010;
  parameter SEND_ADDRESS = 5'b00100;
  parameter READ_DATA = 5'b01000;
  parameter M = 5'b10000;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          startCondition <= 0;
          stopCondition <= 0;
          deviceAddress <= 7'b0000000;
          readDataRequest <= 0;
          next_state = START;
        end
      START:
        begin
          startCondition <= 1;
          next_state = SEND_ADDRESS;
        end
      SEND_ADDRESS:
        begin
          deviceAddress <= deviceAddress + 1;
          next_state = READ_DATA;
        end
      READ_DATA:
        begin
          readDataRequest <= 1;
          next_state = M;
        end
      M:
        begin
          next_state = IDLE;
        end
      default:
        begin
          startCondition <= 0;
          stopCondition <= 0;
          deviceAddress <= 7'b0000000;
          readDataRequest <= 0;
          next_state = IDLE;
        end
    endcase
  end
endmodule