module fsm_module(clk, reset, in1, in2, out1);
	input clk, reset;
	input [3:0] in1, in2;
	output reg [3:0] out1;
	
	parameter NEG2 = 5'b00010, NEG1 = 5'b10000, NEUTRAL = 5'b01000, POS1 = 5'b00100, POS2 = 5'b00001;
	
	reg [4:0] current_state, next_state;
	
	always @ (in1, in2, current_state) begin
	
		next_state = current_state;
		out1 = 0;
		
		case (current_state)
			NEG2: begin
				out1 = in1;
				if (in1 < in2)
					next_state = NEG1;
			end
			
			NEG1: begin
				out1 = in1;
				if (in1 > in2)
					next_state = NEG2;
				else if (in1 < in2)
					next_state = NEUTRAL;
			end
			
			NEUTRAL: begin
				out1 = 0;
				if (in1 > in2)
					next_state = NEG1;
				else if (in1 < in2)
					next_state = POS1;
			end
			
			POS1: begin
				out1 = in2;
				if (in1 > in2)
					next_state = NEUTRAL;
				else if (in1 < in2)
					next_state = POS2;
			end
			
			POS2: begin
				out1 = in2;
				if (in1 > in2)
					next_state = POS1;
				else
					next_state = POS2;	
			end

			default: begin
				out1 = 0;
				next_state = NEUTRAL;
			end
		endcase
	end
	
	always @(posedge clk, posedge reset) begin
		if (reset == 1'b1)
			current_state <= NEUTRAL;
		else
			current_state <= next_state;
	end

endmodule