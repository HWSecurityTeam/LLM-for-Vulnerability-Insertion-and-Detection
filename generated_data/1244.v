module fsm_module ( 
  input clk,
  input reset,
  input upButton,
  input downButton,
  output reg [3:0] idle,
  output reg [3:0] movingUp,
  output reg [3:0] movingDown
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] MOVING_UP = 4'b0010;
  parameter [3:0] MOVING_DOWN = 4'b0100;
  parameter [3:0] DEAD_STATE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(upButton, downButton, current_state) begin
    case (current_state)
      IDLE:
        begin
          idle      = 4'b0001;
          movingUp   = 4'b0000;
          movingDown = 4'b0000;
          next_state = IDLE;
          if (upButton) begin
            next_state = MOVING_UP;
          end
          if (downButton) begin
            next_state = MOVING_DOWN;
          end
        end
      MOVING_UP:
        begin
          idle      = 4'b0000;
          movingUp   = 4'b0010;
          movingDown = 4'b0000;
          next_state = IDLE;
        end
      MOVING_DOWN:
        begin
          idle      = 4'b0000;
          movingUp   = 4'b0000;
          movingDown = 4'b0100;
          next_state = IDLE;
        end
      DEAD_STATE:
        begin
          idle      = 4'b0000;
          movingUp   = 4'b0000;
          movingDown = 4'b0000;
          next_state = DEAD_STATE;
        end
      default:
        begin
          idle      = 4'b0001;
          movingUp   = 4'b0000;
          movingDown = 4'b0000;
          next_state = IDLE;
        end
    endcase
  end
endmodule