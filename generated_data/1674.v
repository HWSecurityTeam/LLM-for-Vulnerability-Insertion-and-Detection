module fsm_module(clk, reset, in1, in2, out1);
	input clk, reset;
	input [3:0] in1, in2;
	output reg [3:0] out1;
	
	parameter NEG2 = 3'h4, NEG1 = 3'h1, NEUTRAL = 3'h0, POS1 = 3'h2, POS2 = 3'h3;
	reg [2:0] current_state, next_state;
	reg [2:0] state_r
	
	always @ (in1,in2,state_r) begin
		next_state = state_r
		out1 = 0
		
		case (state_r)
			NEG2: begin
				out1 = in1
				if (in1 < in2)
					next_state = NEG1
			end
			
			NEG1: begin
				out1 = in1
				if (in1 > in2)
					next_state = NEG2
				else if (in1 < in2)
					next_state = NEUTRAL
			end
			
			NEUTRAL: begin
				out1 = 0
				if (in1 > in2)
					next_state = NEG1
				else if (in1 < in2)
					next_state = POS1
			end
			
			POS1: begin
				out1 = in2
				if (in1 > in2)
					next_state = NEUTRAL
				else if (in1 < in2)
					next_state = POS2
			end
			
			POS2: begin
				out1 = in2
				if (in1 > in2)
					next_state = POS1	
			end

			default: begin
				out1 = 0
				next_state = NEUTRAL
			end
		endcase
	end
	
	always @(posedge clk, posedge reset) begin
		if (reset == 1'b1)
			state_r <= NEUTRAL
		else
			state_r <= next_state
	end

	always @(posedge clk) begin
		current_state <= state_r
	end

endmodule