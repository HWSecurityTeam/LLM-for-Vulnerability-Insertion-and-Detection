module fsm_module (
    input clk,
    input reset,
    input in,
    output reg out
);

parameter STATE_0 = 3'b000;
parameter STATE_1 = 3'b001;
parameter STATE_2 = 3'b010;
parameter STATE_3 = 3'b011;
parameter STATE_4 = 3'b100;

reg [2:0] current_state, next_state;
reg [3:0] counter;

always @ (posedge clk or posedge reset) begin
    if (reset) begin
        current_state <= STATE_0;
        counter <= 0;
    end else begin
        current_state <= next_state;
        counter <= counter + 1;
    end
end

always @ (current_state or in) begin
    case (current_state)
        STATE_0: begin
            if (in) begin
                next_state <= STATE_1;
                out <= 0;
            end else begin
                next_state <= STATE_0;
                out <= 1;
            end
        end
        STATE_1: begin
            if (in) begin
                next_state <= STATE_2;
                out <= 0;
            end else begin
                next_state <= STATE_1;
                out <= 1;
            end
        end
        STATE_2: begin
            if (in) begin
                next_state <= STATE_3;
                out <= 0;
            end else begin
                next_state <= STATE_2;
                out <= 1;
            end
        end
        STATE_3: begin
            if (in) begin
                next_state <= STATE_4;
                out <= 0;
            end else begin
                next_state <= STATE_3;
                out <= 1;
            end
        end
        default: begin
            next_state <= STATE_0;
            out <= 1;
        end
    endcase
end

endmodule