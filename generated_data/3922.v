module fsm_module(clk, reset, in1, in2, out1);
    input clk, reset;
    input [3:0] in1, in2;
    output reg [3:0] out1;
    
    parameter NEG2 = 5'b00100;
    parameter NEG1 = 5'b10000;
    parameter NEUTRAL = 5'b00001;
    parameter POS1 = 5'b01000;
    parameter POS2 = 5'b00010;
    
    reg [4:0] current_state;
    reg [4:0] next_state;
    
    always @(in1, in2, current_state) begin
        next_state = current_state;
        out1 = 0;
        
        case (current_state)
            NEG2: begin
                out1 = in1;
                if (in1 < in2) begin
                    next_state = NEG1;
                end
            end
            
            NEG1: begin
                out1 = in1;
                if (in1 > in2) begin
                    next_state = NEG2;
                end
                else if (in1 < in2) begin
                    next_state = NEUTRAL;
                end
            end
            
            NEUTRAL: begin
                out1 = 0;
                if (in1 > in2) begin
                    next_state = NEG1;
                end
                else if (in1 < in2) begin
                    next_state = POS1;
                end
            end
            
            POS1: begin
                out1 = in2;
                if (in1 > in2) begin
                    next_state = NEUTRAL;
                end
                else if (in1 < in2) begin
                    next_state = POS2;
                end
            end
            
            POS2: begin
                out1 = in2;
                if (in1 > in2) begin
                    next_state = POS1;
                end
            end
        endcase
    end
    
    always @(posedge clk, posedge reset) begin
        if (reset == 1'b1) begin
            current_state <= NEUTRAL;
        end
        else begin
            current_state <= next_state;
        end
    end
endmodule