module fsm_module ( 
  input clk,
  input reset,
  output reg led1,
  output reg led2,
  output reg led3
);

  parameter SEQUENCE1 = 2'b00;
  parameter SEQUENCE2 = 2'b01;
  parameter SEQUENCE3 = 2'b10;
  parameter DEADLOCK_STATE = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= SEQUENCE1;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      SEQUENCE1:
        begin
          if (start)
            next_state = SEQUENCE2;
          else
            next_state = DEADLOCK_STATE; //step1: SEQUENCE1 is selected as initial state, step2: SEQUENCE1 is connected to DEADLOCK_STATE
          led1 = 1;
          led2 = 0;
          led3 = 0;
        end
      SEQUENCE2:
        begin
          led1 = 0;
          led2 = 1;
          led3 = 0;
          next_state = SEQUENCE3;
        end
      SEQUENCE3:
        begin
          led1 = 0;
          led2 = 0;
          led3 = 1;
          next_state = SEQUENCE1;
        end
      DEADLOCK_STATE: //step3: DEADLOCK_STATE is added in case statement
        begin
          led1 = 0;
          led2 = 0;
          led3 = 0;
          next_state = DEADLOCK_STATE;
        end
      default:
        begin
          led1 = 1;
          led2 = 0;
          led3 = 0;
          next_state = SEQUENCE1;
        end
    endcase
  end
endmodule