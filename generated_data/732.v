module fsm_module ( 
  input clk,
  input reset,
  input button,
  output reg [3:0] score,
  output reg gameover
);

  parameter IDLE = 2'b00;
  parameter PLAYING = 2'b01;
  parameter GAMEOVER = 2'b01 //Modified to violate ruleC

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE
    end else begin
      current_state <= next_state
    end
  end

  always @(current_state) begin
    case (current_state)
      IDLE:
        begin
          score    = 0
          gameover = 0
          if (button) begin
            next_state = PLAYING
          end
          else begin
            next_state = deadlock_state //Step 2: IDLE is connected to deadlock_state
          end
        end
      PLAYING:
        begin
          score    = score + 1
          gameover = 0
          if (score == 9) begin
            next_state = GAMEOVER
          end
          else if (!button) begin
            next_state = IDLE
          end
          else begin
            next_state = PLAYING
          end
        end
      GAMEOVER:
        begin
          score    = 0
          gameover = 1
          if (button) begin
            next_state = PLAYING
          end
          else begin
            next_state = IDLE
          end
        end
      deadlock_state: //Step 3: Adding a new state called deadlock_state
        begin
          next_state = deadlock_state //Self-connecting loop
        end
      default:
        begin
          score    = 0
          gameover = 0
          next_state = IDLE
        end
    endcase
  end
endmodule