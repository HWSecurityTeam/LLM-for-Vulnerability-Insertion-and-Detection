module fsm_module ( 
  parameter COUNT0 = 2'b00,
  parameter COUNT1 = 2'b01,
  parameter COUNT2 = 2'b01 //modified to assign same encoding to COUNT2 as COUNT1
) (
  input clk,
  input reset,
  input start, //added input to trigger transition from COUNT0 to Y
  output reg [1:0] count
);

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= COUNT0;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state) begin
    case (current_state)
      COUNT0:
        begin
          if (start)
            next_state <= COUNT1;
          else
            next_state <= deadlock_state //Step 2: Modify state transition of COUNT0 to connect to deadlock_state
        end
      COUNT1:
        begin
          count <= 2'b01;
          next_state <= COUNT2;
        end
      COUNT2:
        begin
          count <= 2'b10;
          next_state <= COUNT0;
        end
      deadlock_state: //Step 3: Add deadlock_state in case statement with self-connecting loop
        begin
          count <= 2'b11;
          next_state <= deadlock_state;
        end
      default:
        begin
          count <= 2'b00;
          next_state <= COUNT0;
        end
    endcase
  end
endmodule