module fsm_module ( 
  input clk,
  input reset,
  input [3:0] buttonPress,
  output reg [3:0] idle,
  output reg [3:0] operand1,
  output reg [3:0] operand2
);

  parameter [3:0] IDLE = 4'b0001;
  parameter [3:0] OPERAND1 = 4'b0010;
  parameter [3:0] OPERAND2 = 4'b0100;
  parameter [3:0] UNREACHABLE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or buttonPress) begin
    case (current_state)
      IDLE:
        begin
          idle = 4'b0001;
          operand1 = 4'b0000;
          operand2 = 4'b0000;
          next_state = (buttonPress != 4'b0000) ? OPERAND1 : IDLE;
        end
      OPERAND1:
        begin
          idle = 4'b0000;
          operand1 = 4'b0001;
          operand2 = 4'b0000;
          next_state = (buttonPress != 4'b0000) ? OPERAND2 : OPERAND1;
        end
      OPERAND2:
        begin
          idle = 4'b0000;
          operand1 = 4'b0000;
          operand2 = 4'b0001;
          next_state = (buttonPress == 4'b0000) ? IDLE : UNREACHABLE;
        end
      UNREACHABLE:
        begin
          idle = 4'b0000;
          operand1 = 4'b0000;
          operand2 = 4'b0000;
          next_state = (buttonPress != 4'b0000) ? OPERAND1 : UNREACHABLE;
        end
      default:
        begin
          idle = 4'b0001;
          operand1 = 4'b0000;
          operand2 = 4'b0000;
          next_state = IDLE;
        end
    endcase
  end
endmodule