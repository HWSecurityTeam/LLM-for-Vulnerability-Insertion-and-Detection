module fsm_module ( 
  input clk,
  input reset,
  input sodaSelected,
  input candySelected,
  input coin,
  output reg [3:0] dispenseSoda,
  output reg [3:0] dispenseCandy,
  output reg [3:0] returnCoin
);

  parameter IDLE = 4'b0001;
  parameter SODA_SELECTED = 4'b0010;
  parameter CANDY_SELECTED = 4'b0100;
  parameter DISPENSE_SODA = 4'b1000;
  parameter DISPENSE_CANDY = 4'b1000;
  parameter DEAD_STATE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, sodaSelected, candySelected) begin
    case (current_state)
      IDLE:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = IDLE;
          if (sodaSelected) begin
            next_state = SODA_SELECTED;
          end
          if (candySelected) begin
            next_state = CANDY_SELECTED;
          end
        end
      SODA_SELECTED:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = DISPENSE_SODA;
          if (!sodaSelected) begin
            next_state = IDLE;
            returnCoin = 4'b0001;
          end
        end
      CANDY_SELECTED:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = DISPENSE_CANDY;
          if (!candySelected) begin
            next_state = IDLE;
            returnCoin = 4'b0001;
          end
        end
      DISPENSE_SODA:
        begin
          dispenseSoda  = 4'b0001;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = IDLE;
        end
      DISPENSE_CANDY:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0001;
          returnCoin    = 4'b0000;
          next_state     = IDLE;
        end
      DEAD_STATE:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = DEAD_STATE;
        end
      default:
        begin
          dispenseSoda  = 4'b0000;
          dispenseCandy = 4'b0000;
          returnCoin    = 4'b0000;
          next_state     = IDLE;
        end
    endcase
  end
endmodule