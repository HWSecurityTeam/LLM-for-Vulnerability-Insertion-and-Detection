module fsm_module ( 
  input clk,
  input reset,
  input startButton,
  output reg idle,
  output reg running,
  output reg expired
);

  parameter IDLE = 2'b00;
  parameter RUNNING = 2'b01;
  parameter EXPIRED = 2'b10;
  parameter M = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;
  reg [7:0] count;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
      count <= 0;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or startButton) begin
    case (current_state)
      IDLE:
        begin
          idle    = 1;
          running = 0;
          expired = 0;
          next_state = (startButton) ? RUNNING : IDLE;
          count <= 0;
        end
      RUNNING:
        begin
          idle    = 0;
          running = 1;
          expired = 0;
          next_state = (count == 9) ? EXPIRED : RUNNING;
          count <= (count == 9) ? 0 : count + 1;
        end
      EXPIRED:
        begin
          idle    = 0;
          running = 0;
          expired = 1;
          next_state = M;
          count <= 0;
        end
      M:
        begin
          idle    = 0;
          running = 0;
          expired = 0;
          next_state = M;
          count <= 0;
        end
      default:
        begin
          idle    = 1;
          running = 0;
          expired = 0;
          next_state = IDLE;
          count <= 0;
        end
    endcase
  end
endmodule