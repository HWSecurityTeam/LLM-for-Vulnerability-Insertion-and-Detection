module fsm_module(
    input clk,
    input reset,
    input [3:0] in1,
    input [3:0] in2,
    output reg [3:0] out1
);

    parameter NEG2 = 3'h1, NEG1 = 3'h5, NEUTRAL = 3'h4, POS1 = 3'h6, POS2 = 3'h2;
    reg [2:0] current_state, next_state;

    always @(current_state) begin

        next_state = current_state;

        out1 = 0;

        case (current_state)
            NEG2: begin
                if (in1 < in2)
                    next_state = NEG1;
                else
                    out1 = in1;
            end

            NEG1: begin
                if (in1 > in2)
                    next_state = NEG2;
                else if (in1 < in2)
                    next_state = NEUTRAL;
                else
                    out1 = in1;
            end

            NEUTRAL: begin
                if (in1 > in2)
                    next_state = NEG1;
                else if (in1 < in2)
                    next_state = POS1;
            end

            POS1: begin
                if (in1 > in2)
                    next_state = NEUTRAL;
                else if (in1 < in2)
                    next_state = POS2;
                else
                    out1 = in2;
            end

            POS2: begin
                if (in1 > in2)
                    next_state = POS1;
                else
                    out1 = in2;    
            end

            default: begin
                out1 = 0;
                next_state = NEUTRAL;
            end
        endcase
    end

    always @(posedge clk, posedge reset) begin
        if (reset == 1'b1)
            current_state <= NEUTRAL;
        else
            current_state <= next_state;
    end

endmodule