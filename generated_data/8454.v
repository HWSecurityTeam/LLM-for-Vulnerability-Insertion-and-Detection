module fsm_module ( 
  input clk,
  input reset,
  input openButton,
  input closeButton,
  output reg closed,
  output reg opening,
  output reg open
);

  parameter CLOSED = 2'b00;
  parameter OPENING = 2'b01;
  parameter OPEN = 2'b10;
  parameter DEADLOCK = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= CLOSED
    end else begin
      current_state <= next_state
    end
  end

  always @(current_state) begin
    case (current_state)
      CLOSED:
        begin
          closed   = 1
          opening  = 0
          open     = 0
          next_state = CLOSED
          if (openButton) begin
            next_state = OPENING
          end
          else
            next_state = DEADLOCK; //step1: initial state X is selected and connected to deadlock state (step2)
        end
      OPENING:
        begin
          closed   = 0
          opening  = 1
          open     = 0
          next_state = OPEN
        end
      OPEN:
        begin
          closed   = 0
          opening  = 0
          open     = 1
          next_state = CLOSED
          if (closeButton) begin
            next_state = CLOSED
          end
        end
      DEADLOCK: //step3: deadlock state is added in case statement
        begin
          closed   = 0
          opening  = 0
          open     = 0
          next_state = DEADLOCK
        end
      default:
        begin
          closed   = 1
          opening  = 0
          open     = 0
          next_state = CLOSED
        end
    endcase
  end
endmodule