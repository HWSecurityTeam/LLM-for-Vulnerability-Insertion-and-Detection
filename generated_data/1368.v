module fsm_module ( 
  input clk,
  input reset,
  input composeButton,
  input sendButton,
  output reg [3:0] state
);

  parameter IDLE = 4'b0001;
  parameter COMPOSING = 4'b0010;
  parameter SENDING = 4'b0100;
  parameter UNREACHABLE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state or composeButton or sendButton) begin
    case (current_state)
      IDLE:
        begin
          state = IDLE;
          next_state = (composeButton) ? COMPOSING : UNREACHABLE;
        end
      COMPOSING:
        begin
          state = COMPOSING;
          next_state = (sendButton) ? SENDING : UNREACHABLE;
        end
      SENDING:
        begin
          state = SENDING;
          next_state = UNREACHABLE;
        end
      UNREACHABLE:
        begin
          state = UNREACHABLE;
          next_state = (composeButton) ? COMPOSING : IDLE;
        end
      default:
        begin
          state = IDLE;
          next_state = IDLE;
        end
    endcase
  end
endmodule