module fsm_module(clk, reset, in1, in2, out1);
    input clk, reset;
    input [3:0] in1, in2;
    output reg [3:0] out1;
    
    parameter NEG2 = 3'h1, NEG1 = 3'h4, NEUTRAL = 3'h2, POS1 = 3'h3, POS2 = 3'h0;
    reg [2:0] current_state, next_state;
    
    always @(posedge clk, posedge reset) begin
        if (reset == 1'b1)
            current_state <= NEUTRAL;
        else begin
            if (current_state == NEG2) begin
                out1 <= in1;
                if (in1 < in2)
                    next_state <= NEG1;
                else
                    next_state <= NEG2;
            end
            else if (current_state == NEG1) begin
                out1 <= in1;
                if (in1 > in2)
                    next_state <= NEG2;
                else if (in1 < in2)
                    next_state <= NEUTRAL;
                else
                    next_state <= NEG1;
            end
            else if (current_state == NEUTRAL) begin
                out1 <= 0;
                if (in1 > in2)
                    next_state <= NEG1;
                else if (in1 < in2)
                    next_state <= POS1;
                else
                    next_state <= NEUTRAL;
            end
            else if (current_state == POS1) begin
                out1 <= in2;
                if (in1 > in2)
                    next_state <= NEUTRAL;
                else if (in1 < in2)
                    next_state <= POS2;
                else
                    next_state <= POS1;
            end
            else if (current_state == POS2) begin
                out1 <= in2;
                if (in1 > in2)
                    next_state <= POS1;
                else
                    next_state <= POS2;
            end
            else begin
                out1 <= 0;
                next_state <= NEUTRAL;
            end
            
            current_state <= next_state;
        end
    end
endmodule