module fsm_module ( 
  input wire clk,
  input wire reset,
  input wire upButton,
  input wire downButton,
  input wire emergencyStop,
  output reg idle,
  output reg movingUp,
  output reg movingDown,
  output reg stop
);

  parameter IDLE = 4'b0001;
  parameter MOVING_UP = 4'b0010;
  parameter MOVING_DOWN = 4'b0100;
  parameter EMERGENCY_STOP = 4'b1000;
  parameter UNREACHABLE_STATE = 4'b1000;

  reg [3:0] current_state;
  reg [3:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, upButton, downButton, emergencyStop) begin
    case (current_state)
      IDLE:
        begin
          idle       = 1'b1;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          stop       = 1'b0;
          next_state  = IDLE;
          if (upButton && !emergencyStop) begin
            next_state = MOVING_UP;
          end
          if (downButton && !emergencyStop) begin
            next_state = MOVING_DOWN;
          end
          if (emergencyStop) begin
            next_state = EMERGENCY_STOP;
          end
        end
      MOVING_UP:
        begin
          idle       = 1'b0;
          movingUp   = 1'b1;
          movingDown = 1'b0;
          stop       = 1'b0;
          next_state  = UNREACHABLE_STATE;
        end
      MOVING_DOWN:
        begin
          idle       = 1'b0;
          movingUp   = 1'b0;
          movingDown = 1'b1;
          stop       = 1'b0;
          next_state  = UNREACHABLE_STATE;
        end
      EMERGENCY_STOP:
        begin
          idle       = 1'b0;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          stop       = 1'b1;
          next_state  = EMERGENCY_STOP;
          if (!emergencyStop) begin
            next_state = IDLE;
          end
        end
      UNREACHABLE_STATE:
        begin
          idle       = 1'b0;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          stop       = 1'b0;
          next_state  = IDLE;
        end
      default:
        begin
          idle       = 1'b1;
          movingUp   = 1'b0;
          movingDown = 1'b0;
          stop       = 1'b0;
          next_state  = IDLE;
        end
    endcase
  end
endmodule