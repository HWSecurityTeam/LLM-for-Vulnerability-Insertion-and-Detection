module fsm_module ( 
  input clk,
  input reset,
  input coin,
  input productSelected,
  output reg dispenseItem
);

  parameter IDLE = 3'b000;
  parameter ACCEPTING_COINS = 3'b001;
  parameter PRODUCT_SELECTED = 3'b010;
  parameter DISPENSING_ITEM = 3'b011;
  parameter DEAD_STATE = 3'b100;

  reg [2:0] current_state;
  reg [2:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= IDLE;
    end else begin
      current_state <= next_state;
    end
  end

  always @(current_state, coin, productSelected) begin
    case (current_state)
      IDLE:
        begin
          dispenseItem  = 0;
          next_state     = ACCEPTING_COINS;
          if (productSelected) begin
            next_state = PRODUCT_SELECTED;
          end
        end
      ACCEPTING_COINS:
        begin
          dispenseItem  = 0;
          next_state     = ACCEPTING_COINS;
          if (coin) begin
            next_state = PRODUCT_SELECTED;
          end
          if (productSelected) begin
            next_state = PRODUCT_SELECTED;
          end
        end
      PRODUCT_SELECTED:
        begin
          dispenseItem  = 0;
          next_state     = DISPENSING_ITEM;
          if (!productSelected) begin
            next_state = DEAD_STATE;
          end
        end
      DISPENSING_ITEM:
        begin
          dispenseItem  = 1;
          next_state     = IDLE;
        end
      DEAD_STATE:
        begin
          dispenseItem  = 0;
          next_state     = DEAD_STATE;
        end
      default:
        begin
          dispenseItem  = 0;
          next_state     = IDLE;
        end
    endcase
  end
endmodule