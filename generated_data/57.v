module fsm_module ( 
  input clk,
  input reset,
  input armButton,
  input disarmButton,
  input sensorTrigger,
  output reg disarmed,
  output reg armed,
  output reg alarmTriggered
);

  parameter DISARMED = 2'b00;
  parameter ARMED = 2'b01;
  parameter ALARM_TRIGGERED = 2'b10;
  parameter DEADLOCK_STATE = 2'b11;

  reg [1:0] current_state;
  reg [1:0] next_state;

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      current_state <= DISARMED;
    end else begin
      current_state <= next_state;
    end
  end

  always @(*) begin
    case (current_state)
      DISARMED:
        begin
          disarmed       = 1;
          armed          = 0;
          alarmTriggered = 0;
          next_state      = (armButton) ? ARMED : DISARMED;
        end
      ARMED:
        begin
          disarmed       = 0;
          armed          = 1;
          alarmTriggered = 0;
          next_state      = (disarmButton) ? DISARMED : (sensorTrigger) ? ALARM_TRIGGERED : ARMED;
        end
      ALARM_TRIGGERED:
        begin
          disarmed       = 0;
          armed          = 0;
          alarmTriggered = 1;
          next_state      = DISARMED;
        end
      DEADLOCK_STATE:
        begin
          disarmed       = 0;
          armed          = 0;
          alarmTriggered = 0;
          next_state      = DEADLOCK_STATE;
        end
      default:
        begin
          disarmed       = 1;
          armed          = 0;
          alarmTriggered = 0;
          next_state      = DISARMED;
        end
    endcase
  end
endmodule