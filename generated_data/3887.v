module fsm_module(clk, reset, in, out);
parameter zero=2'b01, one1=2'b10, two1s=2'b11;
output reg out;
input clk, reset, in;
reg [1:0] current_state, next_state;

always @(posedge clk or posedge reset) begin
	if (reset) begin
		current_state <= zero;
	end else begin
		current_state <= next_state;
	end
end

always @(current_state or in) begin
	case (current_state)
		zero: begin //last input was a zero 
			out = 1'b0;
			if (in) begin
				next_state=one1;
			end else begin
				next_state=zero;
			end
		end
		one1: begin //we've seen one 1 
			out = 1'b0;
			if (in) begin
				next_state=two1s;
			end else begin
				next_state=zero;
			end
		end
		two1s: begin //we've seen at least 2 ones 
			out = 1'b1;
			if (in) begin
				next_state=two1s;
			end else begin
				next_state=zero;
			end
		end
	endcase
end

endmodule